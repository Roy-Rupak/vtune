<?xml version="1.0"?>
<root>
    <metric name="cpu_op_freq">
        <description>Operating frequency of all running cores during this time period in GHz.</description>
        <scope>per_unit</scope>
        <event alias="a">CPU_CLK_UNHALTED.THREAD</event>
        <event alias="b">CPU_CLK_UNHALTED.REF_TSC</event>
        <constant alias="c">system.tsc_freq</constant>      
        <formula>(a/b*c)/1000000000</formula>
    </metric>

    <metric name="cpu_load">
        <description>CPU  load of all running cores during this time period in %.</description>
        <scope>per_unit</scope>
        <event alias="a">CPU_CLK_UNHALTED.REF_TSC</event>
        <time alias="t">TIME_STAMP_IN_CYCLES</time>
        <formula>(a/t)*100</formula>
    </metric>

    <metric name="cpu_clk_unhalted_ref_tsc">
        <description>Event CPU_CLK_UNHALTED.REF_TSC (added for GPA).</description>
        <scope>per_unit</scope>
        <event alias="a">CPU_CLK_UNHALTED.REF_TSC</event>
        <formula>a</formula>
    </metric>

    <metric name="idi_bw_read">
        <description>IDI read bandwidth in MB/sec.</description>
        <scope>per_unit</scope>
        <event alias="a">OFFCORE_REQUESTS.ALL_DATA_RD</event>
        <time alias="t">TIME_STAMP_IN_CYCLES</time>
        <constant alias="b">system.tsc_freq</constant>
        <formula>a*64/(t/b)/1000000</formula>
    </metric>

    <metric name="idi_bw_write">
        <description>IDI write bandwidth in MB/sec.</description>
        <scope>per_unit</scope>
        <event alias="a">OFFCORE_REQUESTS.ALL_REQUESTS</event>
        <event alias="b">OFFCORE_REQUESTS.ALL_DATA_RD</event>
        <time alias="t">TIME_STAMP_IN_CYCLES</time>
        <constant alias="c">system.tsc_freq</constant>
        <formula>(a-b)*64/(t/c)/1000000</formula>
    </metric>

    <metric name="idi_bw_total">
        <description>IDI total bandwidth in MB/sec.</description>
        <scope>per_unit</scope>
        <event alias="a">OFFCORE_REQUESTS.ALL_REQUESTS</event>
        <time alias="t">TIME_STAMP_IN_CYCLES</time>
        <constant alias="b">system.tsc_freq</constant>
        <formula>a*64/(t/b)/1000000</formula>
    </metric>

    <metric name="gt_idi_bw_read">
        <description>GT IDI read bandwidth in MB/sec.</description>
        <scope>per_unit</scope>
        <event alias="a">UNC_GT_MATRIX.READ_UNCORE</event>
        <time alias="t">TIME_STAMP_IN_CYCLES</time>
        <constant alias="b">system.tsc_freq</constant>
        <formula>a*64/(t/b)/1000000</formula>
    </metric>

    <metric name="gt_idi_bw_write">
        <description>GT IDI write bandwidth in MB/sec.</description>
        <scope>per_unit</scope>
        <event alias="a">UNC_GT_MATRIX.WRITE_UNCORE</event>
        <time alias="t">TIME_STAMP_IN_CYCLES</time>
        <constant alias="b">system.tsc_freq</constant>
        <formula>a*64/(t/b)/1000000</formula>
    </metric>

    <metric name="gt_idi_bw_total">
        <description>GT IDI total bandwidth in MB/sec.</description>
        <scope>per_unit</scope>
        <event alias="a">UNC_GT_MATRIX.READ_UNCORE</event>
        <event alias="b">UNC_GT_MATRIX.WRITE_UNCORE</event>
        <time alias="t">TIME_STAMP_IN_CYCLES</time>
        <constant alias="c">system.tsc_freq</constant>
        <formula>(a+b)*64/(t/c)/1000000</formula>
    </metric>
</root>
