<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  xmlns:double="http://www..org/2001/XMLSchema#double"
  >
  <internal
      xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
      syntax="norules"
  >
    <name>%Launch</name>
    <shortName>%LaunchShortName</shortName>
    <xsl:choose>
      <xsl:when test="exsl:ctx('connectionType', '') = 'mic'">
        <description>%AppWorkloadDescriptionMIC</description>
      </xsl:when>
      <xsl:when test="exsl:ctx('connectionType', '') = 'mic-offload'">
        <description>%AppWorkloadDescriptionMICOffload</description>
      </xsl:when>
      <xsl:otherwise>
        <description>%AppWorkloadDescription</description>
      </xsl:otherwise>
    </xsl:choose>
    <alias>launch</alias>
    <property name="helpId">client.launch_application_f1200</property>
  </internal>
  <prerequisites xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
    syntax="norules"
  >
    <xsl:if test="(
        exsl:ctx('connectionType', '') = 'sniper'
        )">
        <xsl:value-of select="exsl:error('%ThisTargetTypeNotWorking')"/>
    </xsl:if>
    <xsl:if test="(exsl:ctx('connectionType', '') = 'ghs')">
        <xsl:value-of select="exsl:error('%ThisTargetTypeNotWorking')"/>
    </xsl:if>
    <xsl:if test="(exsl:ctx('connectionType', '') = 'tcp')">
        <xsl:value-of select="exsl:error('%ThisTargetTypeNotWorking')"/>
    </xsl:if>
  </prerequisites>
  <guiLayout
    xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
    syntax="norules"
  >
    <projectPropertiesPage>
        <panel type="applicationToLaunchPanel"/>
        <xsl:if test="exsl:ctx('noCollectionMode', 0)">
            <panel type="mpiConfigPanel" boolean:bottomAdjusted="true"/>
        </xsl:if>
        <xsl:if test="exsl:ctx('connectionType', '') = 'localhost' or exsl:ctx('connectionType', '') = 'mic-offload'">
            <panel type="environmentVariablesPanel" boolean:bottomAdjusted="true">
                <xsl:if test="exsl:is_experimental('onetabconfigure')">
                    <xsl:attribute name="boolean:advanced">true</xsl:attribute>
                </xsl:if>
            </panel>
        </xsl:if>
        <panel type="inheritableKnobsPanel" boolean:bottomAdjusted="true">
            <xsl:if test="exsl:is_experimental('onetabconfigure')">
                <xsl:attribute name="boolean:advanced">true</xsl:attribute>
            </xsl:if>
        </panel>
        <panel type="experimentDurationPanelWithResumeAuto" boolean:showForHistoricalResult="false">
            <xsl:if test="exsl:is_experimental('onetabconfigure')">
                <xsl:attribute name="boolean:advanced">true</xsl:attribute>
            </xsl:if>
        </panel>
        <panel type="nonInheritableKnobsPanel" boolean:advanced="true"/>
        <panel type="resultDirectoryPanel" boolean:advanced="true" boolean:bottomAdjusted="true" boolean:showForHistoricalResult="false"/>
    </projectPropertiesPage>
  </guiLayout>
  <workload type="wtApplication"/>
  <knobs
    xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
    syntax="norules"
  >
    <groupKnob id="followChild">
      <xsl:choose>
        <xsl:when test="exsl:ctx('connectionType', '') = 'adb'">
           <xsl:attribute name="boolean:visible">false</xsl:attribute>
        </xsl:when>
        <xsl:otherwise>
            <xsl:attribute name="boolean:visible">true</xsl:attribute>
        </xsl:otherwise>
      </xsl:choose>
      <knobProperty name="knob_control_id">followChildGroup</knobProperty>
      <description>%FollowChildDescription</description>
      <knobs>
        <booleanKnob id="followChild" displayName="%FollowChild" cliName="follow-child">
          <description>%FollowChildDescription</description>
          <boolean:defaultValue>true</boolean:defaultValue>
        </booleanKnob>
        <stringKnob id="followChildStrategy" displayName="%FollowChildStrategy" cliName="strategy">
          <description>%FollowChildStrategyDescription</description>
        </stringKnob>
      </knobs>
    </groupKnob>
    <enumKnob id="mrteMode" displayName="%MrteMode" cliName="mrte-mode" boolean:visible="true">
      <description>%MrteModeDescription</description>
      <values>
        <value displayName="%Auto" cliName="auto">auto</value>
        <value displayName="%Native" cliName="native">native</value>
        <value displayName="%Mixed" cliName="mixed">mixed</value>
        <value displayName="%Managed" cliName="managed">managed</value>
        <defaultValue>auto</defaultValue>
      </values>
      <boolean:knobProperty name="inheritable">true</boolean:knobProperty>
      <knobProperty name="style">radioButton</knobProperty>
    </enumKnob>
    <enumKnob id="targetDurationType" displayName="%TargetDurationType" cliName="target-duration-type">
      <description>%TargetDurationTypeDescription</description>
      <values>
        <value displayName="%VeryShortRunning_UnderSixtySeconds">veryshort</value>
        <value displayName="%ShortRunning_UnderOneThousandSeconds">short</value>
        <value displayName="%MediumRunning_UnderTenThousandSeconds">medium</value>
        <value displayName="%LongRunning_OverOneThousandSeconds">long</value>
        <defaultValue>short</defaultValue>
      </values>
    </enumKnob>
    <booleanKnob id="allowMultipleRuns" displayName="%AllowMultipleRuns" cliName="allow-multiple-runs">
      <description>%AllowMultipleRunsDescription</description>
      <boolean:defaultValue>false</boolean:defaultValue>
    </booleanKnob>
    <booleanKnob id="analyzeSystemWide" displayName="%AnalyzeSystemWide" cliName="analyze-system">
      <description>%AnalyzeSystemWideLaunchDescription</description>
      <boolean:defaultValue>false</boolean:defaultValue>
    </booleanKnob>
    <groupKnob id="tracingMode">
      <knobProperty name="knob_control_id">TracingMode</knobProperty>
      <knobProperty name="view.expand">true</knobProperty>
      <knobs>
        <booleanKnob id="enableRing" boolean:visible="false">
          <boolean:defaultValue>false</boolean:defaultValue>
        </booleanKnob>
        <intKnob id="dataLimit" displayName="%DataLimit" cliName="data-limit">
          <description>%DataLimitDescription</description>
          <int:min>0</int:min>
          <int:max>1024000</int:max>
          <int:defaultValue>1000</int:defaultValue>
        </intKnob>
        <doubleKnob id="targetRingBuffer" displayName="%RingBuffer" cliName="ring-buffer">
          <description>%RingBufferDescription</description>
          <double:min>0</double:min>
          <double:max>20</double:max>
          <double:defaultValue>0</double:defaultValue>
        </doubleKnob>
      </knobs>
    </groupKnob>
    <stringKnob id="cpuMask" displayName="%CpuMask" cliName="cpu-mask">
      <xsl:choose>
        <xsl:when test="exsl:ctx('targetOS', '') = 'MacOSX'">
          <xsl:attribute name="boolean:visible">false</xsl:attribute>
        </xsl:when>
        <xsl:otherwise>
          <xsl:attribute name="boolean:visible">true</xsl:attribute>
        </xsl:otherwise>
      </xsl:choose>
      <description>%CpuMaskDescription</description>
      <value></value>
      <defaultValue></defaultValue>
      <allowedPattern>(\d+(-\d+)?(,\d+(-\d+)?)*)?</allowedPattern>
      <allowedExample>1,4-6,8</allowedExample>
    </stringKnob>
    <stringKnob id="customCollector" displayName="%CustomCollector" cliName="custom-collector">
      <description>%CustomCollectorDescription</description>
      <knobProperty name="view.expand">true</knobProperty>
      <knobProperty name="view.modify_button">modify</knobProperty>
      <value></value>
      <defaultValue></defaultValue>
    </stringKnob>
    <xsl:variable name="kvmGuestKnobs" select="document('config://target_type/include/kvm_knobs.xsl')"/>
    <xsl:copy-of select="$kvmGuestKnobs//kvmKnobs/*"/>
    <xsl:variable name="commonKnobs" select="document('config://target_type/include/common.xsl')"/>
    <xsl:copy-of select="$commonKnobs//common/knobs/*"/>
    <xsl:if test="exsl:ctx('noCollectionMode', 0) = 0">
      <booleanKnob id="traceMpi" displayName="%TraceMpi" cliName="trace-mpi" boolean:visible="false">
        <xsl:if test="exsl:ctx('hostOS', '')='Linux'">
          <xsl:attribute name="boolean:visible">true</xsl:attribute>
        </xsl:if>
        <description>%TraceMpikDescription</description>
        <boolean:defaultValue>false</boolean:defaultValue>
      </booleanKnob>
    </xsl:if>
  </knobs>
</bag>
