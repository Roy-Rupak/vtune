<?xml version='1.0' encoding='UTF-8'?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
     xmlns:int="http://www.w3.org/2001/XMLSchema#int"
     xmlns:double="http://www.w3.org/2001/XMLSchema#double"
     xmlns:str="http://exslt.org/strings">
  <internal>
    <name>%PerfSnapAtypeName</name>
    <shortName>%PerfSnapAtypeShortName</shortName>
    <description>%PerfSnapAtypeDescription</description>
    <shortDescription>%PerfSnapAtypeShortDescription</shortDescription>
    <abbreviation>ps</abbreviation>
    <alias>performance-snapshot</alias>
    <property name="helpId">intel.phe.configs.performance_snapshot</property>
    <boolean:property name="supressAdvancedSection">true</boolean:property>
  </internal>
  <prerequisites xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="" syntax="norules">
    <xsl:if test="exsl:ctx('PMU') = 'snb' or exsl:ctx('PMU') = 'snbep'">
      <xsl:value-of select="exsl:error('%ThisAnalysisTypeIsNotApplicable')"/>
    </xsl:if>
  </prerequisites>
  <knobs xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
    syntax="norules">
    <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
      <defaultValue>%PerfSnapshotViewpointName</defaultValue>
    </stringKnob>
    <xsl:variable name="knobsParams">
        <params
            hideKnobInPerfsnapshot="true"
        />
    </xsl:variable>
    <xsl:variable name="knobsParamsName">
      <xsl:text>config://analysis_type/include/knobs.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($knobsParams)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="commonKnobs" select="document($knobsParamsName)"/>
    <xsl:if test="exsl:ctx('targetOS', '') != 'Android'">
      <booleanKnob id="enableCharacterizationInsights" displayName="%EnableCharacterizationInsights" cliName="enable-characterization-insights" boolean:visible="false">
        <description>%EnableCharacterizationInsightsDescriptionAH</description>
        <boolean:defaultValue>true</boolean:defaultValue>
      </booleanKnob>
    </xsl:if>
    <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='isUArchUsageAvailable']"/>
    <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='collectMemoryBW']"/>
    <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='dramBandwidthLimitsAT']"/>
    <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='useGpuCountingMode']"/>
  </knobs>
  <analysis xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:str="http://exslt.org/strings"
    xmlns:exsl="http://exslt.org/common"
    str:keep_str_namespace=""
    exsl:keep_exsl_namespace=""
    syntax="norules">
    <xsl:variable name="events" select="document('config://analysis_type/include/common_events.xsl')"/>
    <xsl:variable name="mainEvents" select="$events//events/cpi"/>
    <xsl:variable name="fpuEvents" select="$events//events/fpu"/>
    <xsl:variable name="retiredEvents" select="$events//events/retired"/>
    <xsl:variable name="memEvents" select="$events//events/memboundHPC"/>
    <xsl:variable name="pmuCommon" select="document('config://include/pmu_common.xsl')"/>
    <xsl:variable name="isBandwidthAvailable" select="$pmuCommon//variables/isDRAMBWAvailable"/>
    <xsl:variable name="isInterSocketBandwidthAvailable" select="$pmuCommon//variables/isInterSocketBWAvailable"/>
    <xsl:variable name="memBandwidthEvents" select="$pmuCommon//variables/memBandwidthEvents"/>
    <xsl:variable name="qpiBandwidthEvents" select="$pmuCommon//variables/qpiBandwidthEvents"/>
    <collector id="runss">
      <xsl:attribute name="id">runsa</xsl:attribute>
      <xsl:copy-of select="document('config://analysis_type/include/prerequisites.xsl')/pmu_prerequisites/*"/>
      <xsl:if test ="exsl:ctx('collectMemoryBW', 0)">
        <boolean:collectorKnob knob="enableDramBandwidthLimitsWarning">true</boolean:collectorKnob>
        <xsl:choose>
          <xsl:when test="$isBandwidthAvailable='true'">
              <boolean:collectorKnob knob="collectMemBandwidth"><xsl:copy-of select="exsl:ctx('collectMemoryBW', 0)"/></boolean:collectorKnob>
          </xsl:when>
          <xsl:otherwise>
              <xsl:value-of select="exsl:error('%BandwidthIsNotWorkWithoutSampling')"/>
          </xsl:otherwise>
        </xsl:choose>
     </xsl:if>
      <boolean:collectorKnob knob="cpuGpuUsageData">true</boolean:collectorKnob>
      <boolean:collectorKnob knob="useCountingMode">true</boolean:collectorKnob>
      <collectorKnob knob="collectFramesMode">false</collectorKnob>
      <xsl:variable name="allEvents">
        <xsl:value-of select="$mainEvents"/>
        <xsl:if test="$retiredEvents and $retiredEvents != ''">
          <xsl:text>,</xsl:text>
          <xsl:value-of select="$retiredEvents"/>
        </xsl:if>
        <xsl:if test="exsl:ctx('enableCharacterizationInsights', 0)">
          <xsl:if test="$fpuEvents and $fpuEvents != ''">
            <xsl:text>,</xsl:text>
            <xsl:value-of select="$fpuEvents"/>
          </xsl:if>
          <xsl:if test="$memEvents and $memEvents != ''">
            <xsl:text>,</xsl:text>
            <xsl:value-of select="$memEvents"/>
          </xsl:if>
        </xsl:if>
        <xsl:if test="$isBandwidthAvailable = 'true' and $memBandwidthEvents != ''">
          <xsl:text>,</xsl:text>
          <xsl:value-of select="$memBandwidthEvents"/>
          <xsl:if test="$isInterSocketBandwidthAvailable = 'true' and $qpiBandwidthEvents != ''">
            <xsl:text>,</xsl:text>
            <xsl:value-of select="$qpiBandwidthEvents"/>
          </xsl:if>
        </xsl:if>
      </xsl:variable>
      <collectorKnob knob="pmuEventConfig">
        <xsl:value-of select="exsl:merge_pmu_events($allEvents)"/>
      </collectorKnob>
      <boolean:collectorKnob knob="isUArchUsageAvailable">true</boolean:collectorKnob>
      <xsl:if test="exsl:ctx('genArchOnBoard', 0) > 5">
        <boolean:collectorKnob knob="errorsAsWarnings">true</boolean:collectorKnob>
        <collectorKnob knob="gpuSamplingInterval">1</collectorKnob>
        <collectorKnob knob="gpuCounters">global-local-accesses</collectorKnob>
        <xsl:if test="exsl:ctx('useGpuCountingMode', 0)">
          <boolean:collectorKnob knob="useGpuCounting">true</boolean:collectorKnob>
        </xsl:if>
      </xsl:if>
      <boolean:collectorKnob knob="explicitUncoreEventsConfig">true</boolean:collectorKnob>
      <xsl:if test="exsl:ctx('PMU') != 'knl' and exsl:ctx('collectMemoryBW', 0) and exsl:ctx('dramBandwidthLimitsAT', 0)">
        <collectorKnob knob="dramBandwidthLimits">true</collectorKnob>
      </xsl:if>
    </collector>
  </analysis>
</bag>
