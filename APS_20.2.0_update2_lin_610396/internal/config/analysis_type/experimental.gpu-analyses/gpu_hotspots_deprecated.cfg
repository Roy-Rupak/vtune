<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  xmlns:double="http://www.w3.org/2001/XMLSchema#double"
  xmlns:str="http://exslt.org/strings"
  >
  <internal>
    <name>%GpuHotspotsAtypeName</name>
    <shortName>%GpuHotspotsAtypeShortName</shortName>
    <description>%GpuHotspotsAtypeDescription</description>
    <abbreviation>ghd</abbreviation>
    <alias>gpu-hotspots-deprecated</alias>
    <int:schemaVersion>1</int:schemaVersion>
    <int:contentVersion>1</int:contentVersion>
    <property name="helpId">intel.phe.configs.gpu_hotspots</property>
  </internal>
  <prerequisites xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="" syntax="norules">
    <xsl:copy-of select="document('config://analysis_type/include/require_connection.xsl?connections=group_generic')"/>
  </prerequisites>
  <knobs xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="" syntax="norules">
    <xsl:variable name="knobsParams">
        <params isGPUUsageVisible='false'/>
    </xsl:variable>
    <xsl:variable name="knobsParamsName">
      <xsl:text>config://analysis_type/include/knobs.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($knobsParams)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="commonKnobs" select="document($knobsParamsName)"/>
    <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
      <defaultValue>%GpuHotspotsViewpointName</defaultValue>
    </stringKnob>
    <xsl:copy-of select="$commonKnobs//knobs/doubleKnob[@id='gpuSamplingInterval']"/>
    <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='gpuUsageCollection']"/>
    <xsl:copy-of select="$commonKnobs//knobs/enumKnob[@id='gpuCountersCollection']"/>
    <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='gpuOpenCLCollection']"/>
    <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='gpuMetalCollection']"/>
    <enumKnob id="cpuTimeColoring" displayName="%CPUTimeColoring" cliName="cpu-time-coloring" boolean:visible="false">
      <description>%CPUTimeColoringDescription</description>
      <values>
        <value displayName="%None" cliName="none">none</value>
        <value displayName="%CPUUsage" cliName="cpu-usage">cpuUsage</value>
        <value displayName="%ThreadConcurrency" cliName="thread-concurrency">threadConcurrency</value>
        <defaultValue>none</defaultValue>
      </values>
    </enumKnob>
    <xsl:choose>
      <xsl:when test="exsl:ctx('targetOS')='MacOSX'">
        <booleanKnob id="enableStackCollect" displayName="%EnableStackCollectionMac" cliName="enable-stack-collection">
          <xsl:if test="not(exsl:is_experimental('sep-lbr'))">
            <xsl:attribute name="boolean:visible">false</xsl:attribute>
          </xsl:if>
          <description>%EnableStackCollectionDescription</description>
          <boolean:defaultValue>false</boolean:defaultValue>
        </booleanKnob>
      </xsl:when>
      <xsl:otherwise>
        <booleanKnob id="enableStackCollect" displayName="%EnableStackCollection" cliName="enable-stack-collection">
          <description>%EnableStackCollectionDescription</description>
          <boolean:defaultValue>false</boolean:defaultValue>
        </booleanKnob>
      </xsl:otherwise>
    </xsl:choose>
  </knobs>
  <analysis xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common"
      exsl:keep_exsl_namespace="" syntax="norules">
    <collector id="runsa">
      <xsl:variable name="runtool" select="document('config://analysis_type/include/runtool.xsl')"/>
      <xsl:variable name="runtoolToUse" select="$runtool//variables/runtoolToUse"/>
      <xsl:attribute name="id">
        <xsl:value-of select="$runtoolToUse"/>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="$runtoolToUse='runss'">
          <xsl:if test="not(exsl:ctx('isTPSSAvailable', 0)) and not(exsl:ctx('isPtraceAvailable', 0))">
            <xsl:value-of select="exsl:error('%RunssBasicHotspotsNotSupported')"/>
          </xsl:if>
          <xsl:if test="exsl:ctx('isPtraceScopeLimited', 0)">
            <xsl:value-of select="exsl:error('%RunssPtraceScopeLimited')"/>
          </xsl:if>
          <xsl:if test="exsl:ctx('PMU') = 'knl' and not(exsl:is_experimental('knl'))">
            <xsl:value-of select="exsl:error('%ThisAnalysisTypeIsNotApplicable')"/>
          </xsl:if>
        </xsl:when>
        <xsl:otherwise>
          <xsl:copy-of select="document('config://analysis_type/include/prerequisites.xsl')/pmu_prerequisites/*"/>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="$runtoolToUse='runss'">
          <xsl:choose>
            <xsl:when test="exsl:ctx('enableStackCollect', 0)">
              <collectorKnob knob="collectSamplesMode">stack</collectorKnob>
            </xsl:when>
            <xsl:otherwise>
              <collectorKnob knob="collectSamplesMode">nostack</collectorKnob>
            </xsl:otherwise>
          </xsl:choose>
          <collectorKnob knob="samplingInterval">10</collectorKnob>
        </xsl:when>
        <xsl:otherwise>
          <xsl:variable name="MainEvents" select="document('config://analysis_type/include/common_events.xsl')/events/cpi/text()"/>
          <collectorKnob knob="pmuEventConfig"><xsl:value-of select="$MainEvents"/></collectorKnob>
          <collectorKnob knob="enableStackCollection"><xsl:value-of select="exsl:ctx('enableStackCollect', 0)"/></collectorKnob>
        </xsl:otherwise>
      </xsl:choose>
      <collectorKnob knob="gpuSamplingInterval"><xsl:value-of select="format-number(exsl:ctx('gpuSamplingInterval', 1), '#.####')"/></collectorKnob>
      <collectorKnob knob="gpuUsage"><xsl:value-of select="exsl:ctx('gpuUsageCollection', 'true')"/></collectorKnob>
      <collectorKnob knob="gpuCounters"><xsl:value-of select="exsl:ctx('gpuCountersCollection', 'none')"/></collectorKnob>
      <collectorKnob knob="collectGpuOpenCl"><xsl:value-of select="exsl:ctx('gpuOpenCLCollection', 0)"/></collectorKnob>
      <collectorKnob knob="collectGpuMetal"><xsl:value-of select="exsl:ctx('gpuMetalCollection', 0)"/></collectorKnob>
      <collectorKnob knob="showInlinesByDefault">false</collectorKnob>
    </collector>
  </analysis>
</bag>
