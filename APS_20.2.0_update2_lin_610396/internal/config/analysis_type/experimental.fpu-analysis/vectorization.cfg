<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  xmlns:double="http://www.w3.org/2001/XMLSchema#double"
  xmlns:str="http://exslt.org/strings"
  >
  <internal>
    <name>%VectorizationAtypeName</name>
    <shortName>%VectorizationAtypeShortName</shortName>
    <description>%VectorizationAtypeDescription</description>
    <abbreviation>vec</abbreviation>
    <alias>vectorization</alias>
    <int:schemaVersion>1</int:schemaVersion>
    <int:contentVersion>1</int:contentVersion>
    <property name="helpId">configs.vectorization_analysis_f1205</property>
  </internal>
  <prerequisites xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="" syntax="norules">
    <xsl:copy-of select="document('config://analysis_type/include/require_connection.xsl?connections=group_generic,group_mic')"/>
  </prerequisites>
  <knobs xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
    xmlns:msxsl="urn:schemas-microsoft-com:xslt"
    exclude-result-prefixes="msxsl"
    syntax="norules">
    <xsl:variable name="commonKnobs" select="document('config://analysis_type/include/knobs.xsl')"/>
    <xsl:copy-of select="$commonKnobs//knobs/doubleKnob[@id='samplingInterval']"/>
    <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
      <defaultValue>%HotspotsByCPUUsageViewpointName</defaultValue>
    </stringKnob>
  </knobs>
  <analysis xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
        syntax="norules">
    <collector id="runsa">
      <boolean:collectorKnob knob="enableStackCollection">false</boolean:collectorKnob>
      <boolean:collectorKnob knob="collectCallCounts">false</boolean:collectorKnob>
      <boolean:collectorKnob knob="enableCSwitch">false</boolean:collectorKnob>
      <boolean:collectorKnob knob="advancedLoopAnalysis">true</boolean:collectorKnob>
      <boolean:collectorKnob knob="analyzeFPU">
        <xsl:choose>
          <xsl:when test="not (
            exsl:ctx('PMU') = 'ivytown'
            or exsl:ctx('PMU') = 'ivybridge'
            or exsl:ctx('PMU') = 'broadwell'
            or exsl:ctx('PMU') = 'broadwell_de'
            or exsl:ctx('PMU') = 'broadwell_server'
            or exsl:ctx('PMU') = 'skylake'
            or exsl:ctx('PMU') = 'skylake_server'
            )">
            <xsl:value-of select="exsl:warning('%FPUMetricsIsNotSupportedForThisPlatform')"/>
            false
          </xsl:when>
          <xsl:otherwise>
            true
          </xsl:otherwise>
        </xsl:choose>
      </boolean:collectorKnob>
      <xsl:variable name="events" select="document('config://analysis_type/include/common_events.xsl')"/>
      <collectorKnob knob="pmuEventConfig">
        <xsl:value-of select="$events//events/cpi"/>
        <xsl:text>,</xsl:text>
        <xsl:value-of select="$events//events/fpu"/>
      </collectorKnob>
      <collectorKnob knob="pmuSamplingInterval"><xsl:value-of select="format-number(exsl:ctx('samplingInterval', 1), '#.####')"/></collectorKnob>
    </collector>
  </analysis>
</bag>
