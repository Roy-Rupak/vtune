<?xml version='1.0' encoding='UTF-8'?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  >
  <internal
    name="%GenericPowerViewpointName"
    shortName="%GenericPowerViewpointShortName"
    description="%GenericPowerViewpointDescription"
    >
    <int:schemaVersion>1</int:schemaVersion>
    <int:contentVersion>1</int:contentVersion>
  </internal>
  <prerequisites xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="" syntax="norules">
    <requiredData xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="" syntax="norules">
      <xsl:if test="not(exsl:ctx('isPowerViewpointApplicable', 0))">
        <queryRef>/Empty</queryRef>
      </xsl:if>
    </requiredData>
  </prerequisites>
  <viewpoint
    xsl:version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common"
    exsl:keep_exsl_namespace=""
    >
    <displayLayout>
      <defaultTab id="summaryTab"/>
      <tab id="summaryTab">
        <masterPane id="summaryPane"/>
      </tab>
      <xsl:if test="not(exsl:is_compare_mode())">
        <tab id="correlateTimelineTab">
          <masterPane id="correlateTimelinePane"/>
          <paneToShow id="quickFilterPane"/>
        </tab>
      </xsl:if>
      <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/tab">
        <xsl:variable name="currentTabId1">
          <xsl:value-of select="./unique_id"/>
        </xsl:variable>
        <tab id="{./id}" displayName="{./name}">
          <paneToShow>
            <xsl:attribute name="id">
              <xsl:value-of select="concat('timeline',./id, 'Pane')" />
            </xsl:attribute>
          </paneToShow>
          <paneToShow id="quickFilterPane" />
          <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/metric[tab_group = $currentTabId1]">
            <xsl:choose>
              <xsl:when test="position()=1">
                <masterPane>
                  <xsl:attribute name="id">
                    <xsl:value-of select="concat('topDown',./id, 'Pane')" />
                  </xsl:attribute>
                </masterPane>
              </xsl:when>
              <xsl:otherwise>
                <paneToShow>
                  <xsl:attribute name="id">
                    <xsl:value-of select="concat('topDown',./id, 'Pane')" />
                  </xsl:attribute>
                </paneToShow>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </tab>
      </xsl:for-each>
      <tab id="SocwatchWLTab">
        <requiredData groupOperation="or">
          <queryRef>/KernelWakelockTime</queryRef>
          <queryRef>/UserWakelockTime</queryRef>
        </requiredData>
        <masterPane id="topDownWLPane"/>
        <paneToShow id="timelineWLPane"/>
        <paneToShow id="quickFilterWLPane"/>
      </tab>
      <tab id="SEPEventCountTab">
        <requiredData groupOperation="or">
          <queryRef>/PMUEventType</queryRef>
          <queryRef>/UncoreEventType</queryRef>
        </requiredData>
        <masterPane id="bottomUpEventCountPane"/>
        <paneToShow id="eventCountTimelinePane"/>
        <paneToShow id="quickFilterPane"/>
        <paneToShow id="SEPQuickFilterPane"/>
      </tab>
      <tab id="SEPSampleCountTab">
        <requiredData groupOperation="or">
          <queryRef>/PMUEventType</queryRef>
          <queryRef>/UncoreEventType</queryRef>
        </requiredData>
        <masterPane id="sampleCountBottomUpPane"/>
        <paneToShow id="sampleCountTimelinePane"/>
        <paneToShow id="quickFilterPane"/>
        <paneToShow id="SEPQuickFilterPane"/>
      </tab>
      <tab id="SEPSampleCountTab">
        <requiredData groupOperation="or">
          <queryRef>/UncoreEventType</queryRef>
        </requiredData>
        <masterPane id="uncoreBottomUpPane"/>
        <paneToShow id="uncoreTimelinePane"/>
        <paneToShow id="quickFilterPane"/>
        <paneToShow id="SEPQuickFilterPane"/>
      </tab>
      <tab id="SEPFlatProfileTab">
        <requiredData groupOperation="or">
          <queryRef>/PMUEventType</queryRef>
        </requiredData>
        <masterPane id="callerCalleePane"/>
        <paneToShow id="SEPQuickFilterPane"/>
        <paneToShow id="quickFilterPane"/>
      </tab>
      <tab id="SEPSampleCountTab">
        <requiredData groupOperation="or">
          <queryRef>/PMUEventType</queryRef>
          <queryRef>/UncoreEventType</queryRef>
        </requiredData>
        <masterPane id="topDownPane"/>
        <paneToShow id="quickFilterPane"/>
        <paneToShow id="SEPQuickFilterPane"/>
      </tab>
      <xsl:if test="not(exsl:is_compare_mode())">
        <tab id="SEPSampleCountTab">
          <requiredData groupOperation="or">
            <queryRef>/PMUEventType</queryRef>
          </requiredData>
          <masterPane id="platformTimelinePane"/>
          <paneToShow id="quickFilterPane"/>
          <paneToShow id="SEPQuickFilterPane"/>
        </tab>
      </xsl:if>
      <tab id="SEPGPUMetricsTab">
        <displayName>%GraphicsTabName</displayName>
        <requiredData groupOperation="or">
          <queryRef>/GPUEventCount</queryRef>
          <queryRef>/GPUTime</queryRef>
          <queryRef>/GPUComputeTaskTime</queryRef>
        </requiredData>
        <masterPane id="gpuMetricsBottomUpPane"/>
        <paneToShow id="gpuTimelinePane"/>
        <paneToShow id="gpuDiagramPane"/>
        <paneToShow id="quickFilterPane"/>
      </tab>
    </displayLayout>
    <pane id="summaryPane" placeId="resultsArea"/>
    <pane id="correlateTimelinePane" placeId="resultsArea"/>
    <pane id="quickFilterPane" placeId="filterArea"/>
    <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/tab">
      <pane>
        <xsl:attribute name="id">
          <xsl:value-of select="concat('timeline',./id, 'Pane')" />
        </xsl:attribute>
        <xsl:attribute name="placeId">bottomArea</xsl:attribute>
      </pane>
    </xsl:for-each>
    <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/metric">
      <pane>
        <xsl:attribute name="id">
          <xsl:value-of select="concat('topDown',./id, 'Pane')" />
        </xsl:attribute>
        <xsl:attribute name="placeId">resultsArea</xsl:attribute>
      </pane>
    </xsl:for-each>
    <pane id="topDownWLPane" placeId="resultsArea"/>
    <pane id="timelineWLPane" placeId="bottomArea"/>
    <pane id="quickFilterWLPane" placeId="filterArea"/>
    <pane id="bottomUpEventCountPane" placeId="resultsArea"/>
    <pane id="eventCountTimelinePane" placeId="bottomArea"/>
    <pane id="sampleCountBottomUpPane" placeId="resultsArea"/>
    <pane id="sampleCountTimelinePane" placeId="bottomArea"/>
    <pane id="uncoreBottomUpPane" placeId="resultsArea"/>
    <pane id="uncoreTimelinePane" placeId="bottomArea"/>
    <pane id="callerCalleePane" placeId="resultsArea"/>
    <pane id="topDownPane" placeId="resultsArea"/>
    <pane id="platformTimelinePane" placeId="resultsArea"/>
    <pane id="gpuMetricsBottomUpPane" placeId="resultsArea"/>
    <pane id="gpuTimelinePane" placeId="bottomArea"/>
    <pane id="gpuDiagramPane" placeId="bottomArea"/>
  </viewpoint>
  <paneLibrary xsl:version="1.0"
               xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
               xmlns:exsl="http://exslt.org/common"
               exsl:keep_exsl_namespace=""
               >
    <xsl:variable name="timelineWLPaneAttributes">
      <description>%WakelocksTimelineWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
    </xsl:variable>
    <xsl:variable name="timelineWLConfig">
      <ruler>
        <layer>
          <drawBy>
            <queryRef>/MarksGlobal</queryRef>
          </drawBy>
        </layer>
        <layer type="GlobalCrossLine" boolean:visible="false">
          <drawBy>
            <queryRef>/VSync</queryRef>
          </drawBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/Frame</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/FrameDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/Frame</queryRef>
            <queryRef>/FrameDomain</queryRef>
            <queryRef>/FrameType</queryRef>
            <queryRef>/FrameRate</queryRef>
          </tooltipBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/RegionGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/RegionDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/RegionDomain</queryRef>
            <queryRef>/RegionType</queryRef>
          </tooltipBy>
        </layer>
        <layer boolean:visible="false">
          <drawBy>
            <queryRef>/BarrierGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/BarrierDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/BarrierDomain</queryRef>
          </tooltipBy>
        </layer>
      </ruler>
      <area headerMode="rich">
        <rowSet displayName="%WakelockCount">
          <layer type="InstanceCount" boolean:scaleGroupStart="true">
            <drawBy>
              <queryRef>/KernelWakelockCount</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/KernelWakelockCount</queryRef>
            </tooltipBy>
          </layer>
          <layer type="InstanceCount" boolean:scaleGroupEnd="true">
            <drawBy>
              <queryRef>/UserWakelockCount</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/UserWakelockCount</queryRef>
            </tooltipBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/S3Time</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/S3Time</queryRef>
            </tooltipBy>
          </layer>
        </rowSet>
      </area>
      <area sizeMode="rowLimit" id="user_wakelock_name">
        <rowSet displayName="%UserWakelockUIDName">
          <rowBy>
            <queryRef>/UserWakelockUIDName</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/UserWakelockTime</queryRef>
          </columnBy>
          <layer type="RowInterval">
            <drawBy>
              <queryRef>/UserWakelock</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/UserWakelockLockProcess</queryRef>
              <queryRef>/UserWakelockUnlockProcess</queryRef>
              <queryRef>/UserWakelockFlag</queryRef>
              <queryRef>/UserWakelockTag</queryRef>
            </tooltipBy>
          </layer>
        </rowSet>
      </area>
      <area sizeMode="rowLimit" id="wakelock_object">
        <rowSet displayName="%WakelockObject">
          <rowBy>
            <queryRef>/KernelWakelockObjectBand</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/KernelWakelockTime</queryRef>
          </columnBy>
          <layer type="RowInterval">
            <drawBy>
              <queryRef>/KernelWakelock</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/KernelWakelockLockProcess</queryRef>
              <queryRef>/KernelWakelockLockReason</queryRef>
              <queryRef>/KernelWakelockUnlockReason</queryRef>
              <queryRef>/KernelWakelockUnlockProcess</queryRef>
            </tooltipBy>
          </layer>
        </rowSet>
      </area>
    </xsl:variable>
    <xsl:variable name="eventCountTimelinePaneAttributes">
      <helpKeywordF1>intel.phe.configs.platform_view_f1179</helpKeywordF1>
      <description>%PlatformTimelineWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
    </xsl:variable>
    <xsl:variable name="eventCountTimelineConfig">
      <ruler>
        <layer>
          <drawBy>
            <queryRef>/MarksGlobal</queryRef>
          </drawBy>
        </layer>
        <layer type="GlobalCrossLine" boolean:visible="false">
          <drawBy>
            <queryRef>/VSync</queryRef>
          </drawBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/Frame</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/FrameDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/Frame</queryRef>
            <queryRef>/FrameDomain</queryRef>
            <queryRef>/FrameType</queryRef>
            <queryRef>/FrameRate</queryRef>
          </tooltipBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/RegionGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/RegionDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/RegionDomain</queryRef>
            <queryRef>/RegionType</queryRef>
          </tooltipBy>
        </layer>
        <layer boolean:visible="false">
          <drawBy>
            <queryRef>/BarrierGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/BarrierDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/BarrierDomain</queryRef>
          </tooltipBy>
        </layer>
      </ruler>
      <area>
        <rowSet displayName="%FramesOverTime">
          <layer>
            <drawBy>
              <queryRef>/FrameRate</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="" id="metrics_by_object">
        <rowSet>
          <rowBy>
            <vectorQueryInsert>/PMUTimelineRowBy</vectorQueryInsert>
          </rowBy>
          <columnBy>
            <queryRef>/PMUEventCount/PMUEventType</queryRef>
            <queryRef>/PreciseClockticks</queryRef>
            <queryRef>/PMUUserTime</queryRef>
            <queryRef>/CounterMetrics</queryRef>
            <queryRef>/GPUComputeTaskTimeGPUName</queryRef>
            <queryRef>/GPUTime</queryRef>
            <queryRef>/RegionTime</queryRef>
            <queryRef>/BarrierInstanceCount</queryRef>
          </columnBy>
          <queryMode>allRows</queryMode>
          <layer>
            <drawBy>
              <queryRef>/ThreadLifeTime</queryRef>
            </drawBy>
          </layer>
          <layer type="RowInterval" visibleOnLevels="Thread" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/ContextSwitches</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/ContextSwitchReason</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/ContextSwitchCpu</queryRef>
              <queryRef>/ContextSwitchReason</queryRef>
              <queryRef>/ContextSwitchSourceFile</queryRef>
              <queryRef>/ContextSwitchSourceLine</queryRef>
            </tooltipBy>
            <diveBy>
              <queryRef>/ContextSwitchCS</queryRef>
            </diveBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:visible="true">
            <drawBy>
              <queryRef>/PMUEventCount/PMUEventType</queryRef>
            </drawBy>
          </layer>
          <layer boolean:visible="false">
            <drawBy>
              <queryRef>/PreciseClockticks</queryRef>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupStart="true">
            <drawBy>
              <queryRef>/CounterMetrics/CounterType</queryRef>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupEnd="true">
            <drawBy>
              <queryRef>/ThreadInstantValue/ThreadInstantValuesType</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread" boolean:showText="true">
            <drawBy>
              <queryRef>/Task</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/TaskType</queryRef>
              <queryRef>/TaskDurationType</queryRef>
              <queryRef>/TaskEndCallStack</queryRef>
            </tooltipBy>
            <colorBy>
              <queryRef>/TaskType</queryRef>
            </colorBy>
            <highlightBy int:groupId="3">
              <queryRef>/TaskGroupKey</queryRef>
            </highlightBy>
          </layer>
          <layer type="EventMarker" boolean:visible="false" visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/SlowTaskMarker/TaskDurationType[%SlowTask]</queryRef>
            </drawBy>
          </layer>
          <layer type="Transition" boolean:visible="false" visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/TaskTransition</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/GPUComputeTask</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/GPUComputeTask</queryRef>
              <queryRef>/GPUComputeTaskPurposeShortName</queryRef>
              <queryRef>/GPUComputeGlobalDim</queryRef>
              <queryRef>/GPUComputeLocalDim</queryRef>
              <queryRef>/GPUComputeSimdWidth</queryRef>
            </tooltipBy>
            <highlightBy int:groupId="2">
              <queryRef>/GPUComputeTask</queryRef>
            </highlightBy>
            <hatchBy>
              <queryRef>/GPUComputeTaskPurpose</queryRef>
            </hatchBy>
          </layer>
        </rowSet>
      </area>
      <area id="raw_event_count_by_core">
        <rowSet>
          <rowBy>
            <queryRef>/PMUEventType</queryRef>
            <queryRef>/PMUEventType/PMUPackage/PMUCore/PMUHWContext</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/PMUEventCount</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/PMUEventCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="" id="threads_cumulative_metrics" boolean:visible="false">
        <rowSet displayName="%CounterCount">
          <rowBy>
            <queryRef>/GenericCounterType</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/CounterMetricsNamedAsCounterRate</queryRef>
            <queryRef>/ThreadInstantValueCount</queryRef>
          </columnBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/CounterMetricsNamedAsCounterRate</queryRef>
            </drawBy>
          </layer>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/ThreadInstantValue</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area id="global">
        <rowSet displayName="%GlobalCountersArea">
          <rowBy>
            <queryRef>/GenericCounterType</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/GlobalCounterMetrics</queryRef>
            <queryRef>/GlobalInstantValueCount</queryRef>
          </columnBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/GlobalCounterMetrics</queryRef>
            </drawBy>
          </layer>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/GlobalInstantValue</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area>
        <rowSet displayName="%GPUUsageOverTime">
          <layer type="InstanceCountOverTime">
            <drawBy>
              <queryRef>/GPUUsageAggregated</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUGpuBusy</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUTimeAllCoresCumulative</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="true">
        <rowSet displayName="%SystemBandwidth">
          <layer>
            <drawBy>
              <queryRef>/OvertimeBandwidthSystem</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
    </xsl:variable>
    <xsl:variable name="sampleCountTimelinePaneAttributes">
      <helpKeywordF1>intel.phe.configs.platform_view_f1179</helpKeywordF1>
      <description>%PlatformTimelineWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
    </xsl:variable>
    <xsl:variable name="sampleCountTimelineConfig">
      <ruler>
        <layer>
          <drawBy>
            <queryRef>/MarksGlobal</queryRef>
          </drawBy>
        </layer>
        <layer type="GlobalCrossLine" boolean:visible="false">
          <drawBy>
            <queryRef>/VSync</queryRef>
          </drawBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/Frame</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/FrameDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/Frame</queryRef>
            <queryRef>/FrameDomain</queryRef>
            <queryRef>/FrameType</queryRef>
            <queryRef>/FrameRate</queryRef>
          </tooltipBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/RegionGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/RegionDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/RegionDomain</queryRef>
            <queryRef>/RegionType</queryRef>
          </tooltipBy>
        </layer>
        <layer boolean:visible="false">
          <drawBy>
            <queryRef>/BarrierGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/BarrierDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/BarrierDomain</queryRef>
          </tooltipBy>
        </layer>
      </ruler>
      <area>
        <rowSet displayName="%FramesOverTime">
          <layer>
            <drawBy>
              <queryRef>/FrameRate</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="" id="metrics_by_object">
        <rowSet>
          <rowBy>
            <vectorQueryInsert>/PMUTimelineRowBy</vectorQueryInsert>
            <sort>
              <queryRef>/PMUSampleCount/PMUEventType</queryRef>
            </sort>
          </rowBy>
          <columnBy>
            <queryRef>/PMUSampleCount/PMUEventType</queryRef>
            <queryRef>/PreciseClockticks</queryRef>
            <queryRef>/PMUUserTime</queryRef>
            <queryRef>/CounterMetrics</queryRef>
            <queryRef>/GPUComputeTaskTimeGPUName</queryRef>
            <queryRef>/GPUTime</queryRef>
            <queryRef>/RegionTime</queryRef>
            <queryRef>/BarrierInstanceCount</queryRef>
          </columnBy>
          <queryMode>allRows</queryMode>
          <layer>
            <drawBy>
              <queryRef>/ThreadLifeTime</queryRef>
            </drawBy>
          </layer>
          <layer type="RowInterval" visibleOnLevels="Thread" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/ContextSwitches</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/ContextSwitchReason</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/ContextSwitchCpu</queryRef>
              <queryRef>/ContextSwitchReason</queryRef>
              <queryRef>/ContextSwitchSourceFile</queryRef>
              <queryRef>/ContextSwitchSourceLine</queryRef>
            </tooltipBy>
            <diveBy>
              <queryRef>/ContextSwitchCS</queryRef>
            </diveBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:visible="true">
            <drawBy>
              <queryRef>/PMUSampleCount/PMUEventType</queryRef>
            </drawBy>
          </layer>
          <layer boolean:visible="false">
            <drawBy>
              <queryRef>/PreciseClockticks</queryRef>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupStart="true">
            <drawBy>
              <queryRef>/CounterMetrics/CounterType</queryRef>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupEnd="true">
            <drawBy>
              <queryRef>/ThreadInstantValue/ThreadInstantValuesType</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread" boolean:showText="true">
            <drawBy>
              <queryRef>/Task</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/TaskType</queryRef>
              <queryRef>/TaskDurationType</queryRef>
              <queryRef>/TaskEndCallStack</queryRef>
            </tooltipBy>
            <colorBy>
              <queryRef>/TaskType</queryRef>
            </colorBy>
            <highlightBy int:groupId="3">
              <queryRef>/TaskGroupKey</queryRef>
            </highlightBy>
          </layer>
          <layer type="EventMarker" visibleOnLevels="Thread" boolean:visible="false">
            <drawBy>
              <queryRef>/SlowTaskMarker/TaskDurationType[%SlowTask]</queryRef>
            </drawBy>
          </layer>
          <layer type="Transition" boolean:visible="false" visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/TaskTransition</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/GPUComputeTask</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/GPUComputeTask</queryRef>
              <queryRef>/GPUComputeTaskPurposeShortName</queryRef>
              <queryRef>/GPUComputeGlobalDim</queryRef>
              <queryRef>/GPUComputeLocalDim</queryRef>
              <queryRef>/GPUComputeSimdWidth</queryRef>
            </tooltipBy>
            <highlightBy int:groupId="2">
              <queryRef>/GPUComputeTask</queryRef>
            </highlightBy>
            <hatchBy>
              <queryRef>/GPUComputeTaskPurpose</queryRef>
            </hatchBy>
          </layer>
        </rowSet>
      </area>
      <area id="raw_event_count_by_core">
        <rowSet>
          <rowBy>
            <queryRef>/PMUEventType</queryRef>
            <queryRef>/PMUEventType/PMUPackage/PMUCore/PMUHWContext</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/PMUSampleCount</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/PMUSampleCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="" id="threads_cumulative_metrics" boolean:visible="false">
        <rowSet displayName="%CounterCount">
          <rowBy>
            <queryRef>/GenericCounterType</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/CounterMetricsNamedAsCounterRate</queryRef>
            <queryRef>/ThreadInstantValueCount</queryRef>
          </columnBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/CounterMetricsNamedAsCounterRate</queryRef>
            </drawBy>
          </layer>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/ThreadInstantValue</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area id="global">
        <rowSet displayName="%GlobalCountersArea">
          <rowBy>
            <queryRef>/GenericCounterType</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/GlobalCounterMetrics</queryRef>
            <queryRef>/GlobalInstantValueCount</queryRef>
          </columnBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/GlobalCounterMetrics</queryRef>
            </drawBy>
          </layer>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/GlobalInstantValue</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area>
        <rowSet displayName="%GPUUsageOverTime">
          <layer type="InstanceCountOverTime">
            <drawBy>
              <queryRef>/GPUUsageAggregated</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUGpuBusy</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUTimeAllCoresCumulative</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="true">
        <rowSet displayName="%SystemBandwidth">
          <layer>
            <drawBy>
              <queryRef>/OvertimeBandwidthSystem</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
    </xsl:variable>
    <xsl:variable name="uncoreTimelinePaneAttributes">
      <helpKeywordF1>configs.uncore_events_f1213</helpKeywordF1>
      <description>%PMUEventsTimelineWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
    </xsl:variable>
    <xsl:variable name="uncoreTimelineConfig">
      <ruler>
        <layer>
          <drawBy>
            <queryRef>/MarksGlobal</queryRef>
          </drawBy>
        </layer>
        <layer type="GlobalCrossLine" boolean:visible="false">
          <drawBy>
            <queryRef>/VSync</queryRef>
          </drawBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/Frame</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/FrameDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/Frame</queryRef>
            <queryRef>/FrameDomain</queryRef>
            <queryRef>/FrameType</queryRef>
            <queryRef>/FrameRate</queryRef>
          </tooltipBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/RegionGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/RegionDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/RegionDomain</queryRef>
            <queryRef>/RegionType</queryRef>
          </tooltipBy>
        </layer>
        <layer boolean:visible="false">
          <drawBy>
            <queryRef>/BarrierGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/BarrierDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/BarrierDomain</queryRef>
          </tooltipBy>
        </layer>
      </ruler>
      <area id="uncore_event">
        <rowSet displayName="%UncoreEvent">
          <rowBy>
            <queryRef>/UncoreEventType/UncorePackage</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/UncoreEventCount</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/UncoreEventCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area>
        <rowSet displayName="%FramesOverTime">
          <layer>
            <drawBy>
              <queryRef>/FrameRate</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
    </xsl:variable>
    <xsl:variable name="platformTimelinePaneAttributes">
      <helpKeywordF1>intel.phe.configs.platform_view_f1179</helpKeywordF1>
      <description>%PlatformTimelineWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
    </xsl:variable>
    <xsl:variable name="platformTimelineConfig">
      <ruler>
        <layer>
          <drawBy>
            <queryRef>/MarksGlobal</queryRef>
          </drawBy>
        </layer>
        <layer type="GlobalCrossLine" boolean:visible="false">
          <drawBy>
            <queryRef>/VSync</queryRef>
          </drawBy>
        </layer>
      </ruler>
      <area sizeMode="rowLimit" id="frames">
        <rowSet displayName="%FramesOverTime">
          <rowBy>
            <queryRef>/FrameDomain</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/FrameTime</queryRef>
          </columnBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/FrameRate</queryRef>
            </drawBy>
          </layer>
          <layer type="EventMarker">
            <drawBy>
              <queryRef>/Frame</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/Frame</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/Frame</queryRef>
              <queryRef>/FrameType</queryRef>
              <queryRef>/FrameRate</queryRef>
            </tooltipBy>
          </layer>
        </rowSet>
      </area>
      <area id="gpu_usage_over_time" rowOutlineStyle="dotted">
        <rowSet>
          <rowBy>
            <vectorQueryInsert>/GPUPacketQueueRowBy</vectorQueryInsert>
            <sort>
              <queryRef>/GPUTime</queryRef>
            </sort>
          </rowBy>
          <columnBy>
            <queryRef>/GPUTime</queryRef>
          </columnBy>
          <layer type="RowInterval" boolean:showText="true" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/GPUDMAPacket</queryRef>
            </drawBy>
            <highlightBy int:groupId="1">
              <queryRef>/GPUDMAPacketSubmissionId</queryRef>
            </highlightBy>
            <tooltipBy>
              <vectorQueryInsert>/GPUDMAPacketDetails</vectorQueryInsert>
            </tooltipBy>
            <colorBy>
              <queryRef>/GPUNode</queryRef>
            </colorBy>
            <hatchBy>
              <queryRef>/GPUDMAPacket</queryRef>
            </hatchBy>
          </layer>
          <layer type="RowIntervalNested" boolean:showText="true" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/QueueDMAPacket</queryRef>
            </drawBy>
            <highlightBy int:groupId="1">
              <queryRef>/GPUQueuePacketSubmissionId</queryRef>
            </highlightBy>
            <tooltipBy>
              <vectorQueryInsert>/GPUQueuePacketDetails</vectorQueryInsert>
            </tooltipBy>
            <colorBy>
              <queryRef>/GPUNode</queryRef>
            </colorBy>
            <hatchBy>
              <queryRef>/QueueDMAPacket</queryRef>
            </hatchBy>
          </layer>
        </rowSet>
      </area>
      <area id="computing_queue" rowOutlineStyle="dotted">
        <rowSet displayName="%ComputingQueue">
          <rowBy>
            <queryRef>/ComputingQueue</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/GPUComputeTaskTimeGPUName</queryRef>
            <queryRef>/ComputeQueueTime</queryRef>
          </columnBy>
          <queryMode>allRows</queryMode>
          <layer type="RowInterval" boolean:showColoringAsLegendItems="true" boolean:showText="true">
            <drawBy>
              <queryRef>/GPUComputeTask</queryRef>
            </drawBy>
            <highlightBy int:groupId="2">
              <queryRef>/GPUComputeTask</queryRef>
            </highlightBy>
            <tooltipBy>
              <queryRef>/GPUComputeTask</queryRef>
              <queryRef>/GPUComputeTaskPurposeShortName</queryRef>
              <queryRef>/GPUComputeSubmitThread</queryRef>
              <queryRef>/GPUComputeGlobalDim</queryRef>
              <queryRef>/GPUComputeLocalDim</queryRef>
              <queryRef>/GPUComputeSimdWidth</queryRef>
            </tooltipBy>
            <hatchBy>
              <queryRef>/GPUComputeTask</queryRef>
            </hatchBy>
            <colorBy>
              <queryRef>/GPUComputeTask</queryRef>
            </colorBy>
          </layer>
          <layer type="RowIntervalNested" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/ComputeQueue</queryRef>
            </drawBy>
            <highlightBy int:groupId="2">
              <queryRef>/ComputeQueue</queryRef>
            </highlightBy>
            <tooltipBy>
              <queryRef>/ComputeQueueTaskName</queryRef>
              <queryRef>/ComputeQueuePurpose</queryRef>
              <queryRef>/ComputeQueueSubmitThread</queryRef>
              <queryRef>/GPUComputeGlobalDimQueue</queryRef>
              <queryRef>/GPUComputeLocalDimQueue</queryRef>
              <queryRef>/GPUComputeSimdWidthQueue</queryRef>
            </tooltipBy>
            <colorBy>
              <queryRef>/ComputeQueue</queryRef>
            </colorBy>
            <hatchBy>
              <queryRef>/ComputeQueue</queryRef>
            </hatchBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="rich" id="metrics_by_object">
        <rowSet>
          <rowBy>
            <vectorQueryInsert>/PMUTimelineRowBy</vectorQueryInsert>
            <sort>
              <queryRef>/GPUTime</queryRef>
            </sort>
          </rowBy>
          <columnBy>
            <queryRef>/PMUEventCount/PMUEventType</queryRef>
            <queryRef>/PreciseClockticks</queryRef>
            <queryRef>/PMUUserTime</queryRef>
            <queryRef>/TaskTime</queryRef>
            <queryRef>/CounterMetrics</queryRef>
            <queryRef>/GPUComputeTaskTimeGPUName</queryRef>
            <queryRef>/GPUTime</queryRef>
            <queryRef>/RegionTime</queryRef>
            <queryRef>/BarrierInstanceCount</queryRef>
          </columnBy>
          <queryMode>allRows</queryMode>
          <layer>
            <drawBy>
              <queryRef>/ThreadLifeTime</queryRef>
            </drawBy>
          </layer>
          <layer type="RowInterval" visibleOnLevels="Thread" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/ContextSwitches</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/ContextSwitchReason</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/ContextSwitchCpu</queryRef>
              <queryRef>/ContextSwitchReason</queryRef>
              <queryRef>/ContextSwitchSourceFile</queryRef>
              <queryRef>/ContextSwitchSourceLine</queryRef>
            </tooltipBy>
            <diveBy>
              <queryRef>/ContextSwitchCS</queryRef>
            </diveBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:visible="true">
            <drawBy>
              <queryRef>/PMUEventCount/PMUEventType</queryRef>
            </drawBy>
          </layer>
          <layer boolean:visible="false">
            <drawBy>
              <queryRef>/PreciseClockticks</queryRef>
            </drawBy>
          </layer>
          <layer type="InstanceCountOverTime">
            <drawBy>
              <instanceCountQuery>
                <queryInherit>/GPUUsageForGridRow</queryInherit>
                <maxEval>$logicalGPUCount + 1</maxEval>
              </instanceCountQuery>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupStart="true">
            <drawBy>
              <queryRef>/CounterMetrics/CounterType</queryRef>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupEnd="true">
            <drawBy>
              <queryRef>/ThreadInstantValue/ThreadInstantValuesType</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread" boolean:showText="true">
            <drawBy>
              <queryRef>/TaskHierarchical</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/TaskType</queryRef>
              <queryRef>/TaskDurationType</queryRef>
              <queryRef>/TaskEndCallStack</queryRef>
            </tooltipBy>
            <colorBy>
              <queryRef>/TaskType</queryRef>
            </colorBy>
            <highlightBy int:groupId="3">
              <queryRef>/TaskGroupKey</queryRef>
            </highlightBy>
          </layer>
          <layer type="EventMarker" visibleOnLevels="Thread" boolean:visible="false">
            <drawBy>
              <queryRef>/SlowTaskMarker/TaskDurationType[%SlowTask]</queryRef>
            </drawBy>
          </layer>
          <layer type="Transition" boolean:visible="false" visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/TaskTransition</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/GPUComputeTask</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/GPUComputeTask</queryRef>
              <queryRef>/GPUComputeTaskPurposeShortName</queryRef>
              <queryRef>/GPUComputeGlobalDim</queryRef>
              <queryRef>/GPUComputeLocalDim</queryRef>
              <queryRef>/GPUComputeSimdWidth</queryRef>
            </tooltipBy>
            <highlightBy int:groupId="2">
              <queryRef>/GPUComputeTask</queryRef>
            </highlightBy>
            <hatchBy>
              <queryRef>/GPUComputeTaskPurpose</queryRef>
            </hatchBy>
          </layer>
        </rowSet>
      </area>
      <area id="raw_event_count_by_core">
        <rowSet>
          <rowBy>
            <queryRef>/PMUEventType</queryRef>
            <queryRef>/PMUEventType/PMUPackage/PMUCore/PMUHWContext</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/PMUEventCount</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/PMUEventCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="" id="threads_cumulative_metrics" boolean:visible="false">
        <rowSet displayName="%CounterCount">
          <rowBy>
            <queryRef>/GenericCounterType</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/CounterMetricsNamedAsCounterRate</queryRef>
            <queryRef>/ThreadInstantValueCount</queryRef>
          </columnBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/CounterMetricsNamedAsCounterRate</queryRef>
            </drawBy>
          </layer>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/ThreadInstantValue</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area id="global">
        <rowSet displayName="%GlobalCountersArea">
          <rowBy>
            <queryRef>/GenericCounterType</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/GlobalCounterMetrics</queryRef>
            <queryRef>/GlobalInstantValueCount</queryRef>
          </columnBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/GlobalCounterMetrics</queryRef>
            </drawBy>
          </layer>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/GlobalInstantValue</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="false">
        <rowSet displayName="%GPUEUActivity">
          <layer>
            <drawBy>
              <queryRef>/GPUCoreFrequency</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEUIdle</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEUActive</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEUStalled</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area>
        <rowSet displayName="%GPUUsageOverTime">
          <layer type="InstanceCountOverTime">
            <drawBy>
              <queryRef>/GPUUsageAggregated</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUGpuBusy</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUTimeAllCoresCumulative</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area id="uncore_event">
        <rowSet displayName="%UncoreEvent">
          <rowBy>
            <queryRef>/UncoreEventType/UncorePackage</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/UncoreEventCount</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/UncoreEventCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:showYScale="true" id="cpu_cores">
        <rowSet displayName="%CoreFrequency">
          <rowBy>
            <queryRef>/PMUHWContext</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/PMUCoreFrequency</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/PMUCoreFrequency</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="rich" boolean:showYScale="true" id="all_read_write_bw">
        <rowSet displayName="%DRAMBandwidth">
          <rowBy>
            <queryRef>/UncorePackage</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/OvertimeBandwidth</queryRef>
          </columnBy>
          <layer boolean:scaleGroupStart="true">
            <drawBy>
              <queryRef>/OvertimeBandwidth</queryRef>
              <displayAttributes>
                <timelineFormat>area</timelineFormat>
                <timelineGraphColor>72,104,155</timelineGraphColor>
              </displayAttributes>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/OvertimeReadBandwidthLine</queryRef>
            </drawBy>
          </layer>
          <layer boolean:scaleGroupEnd="true">
            <drawBy>
              <queryRef>/OvertimeWriteBandwidthLine</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="rich" boolean:showYScale="true" id="qpi_bw">
        <rowSet displayName="%QPIBandwidth">
          <xsl:choose>
            <xsl:when test="(exsl:ctx('PMU') = 'snbep') or (exsl:ctx('PMU') = 'ivytown') or
                            (exsl:ctx('PMU') = 'haswell_server') or (exsl:ctx('PMU') = 'broadwell_server')">
              <xsl:attribute name="displayName">%QPIBandwidth</xsl:attribute>
            </xsl:when>
            <xsl:otherwise>
              <xsl:attribute name="displayName">%UPIBandwidth</xsl:attribute>
            </xsl:otherwise>
          </xsl:choose>
          <rowBy>
            <queryRef>/UncorePackage</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/OvertimeQPIBandwidth</queryRef>
          </columnBy>
          <layer boolean:scaleGroupStart="true">
            <drawBy>
              <queryRef>/OvertimeQPIBandwidth</queryRef>
              <displayAttributes>
                <timelineFormat>area</timelineFormat>
                <timelineGraphColor>72,104,155</timelineGraphColor>
              </displayAttributes>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/OvertimeQPIReadBandwidthLine</queryRef>
            </drawBy>
          </layer>
          <layer boolean:scaleGroupEnd="true">
            <drawBy>
              <queryRef>/OvertimeQPIWriteBandwidthLine</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="rich" boolean:maxLabels="true" id="p_states">
        <rowSet displayName="%PState">
          <rowBy boolean:useGridQuery="false">
            <queryRef>/Core</queryRef>
          </rowBy>
          <layer type="Overtime">
            <drawBy>
              <queryRef>/PStateFreq</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/PStateFreq</queryRef>
            </tooltipBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="rich" id="package_core">
        <rowSet displayName="%CState">
          <rowBy>
            <queryRef>/Core</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/CStateTime</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/CStateTime/CState</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area>
        <rowSet displayName="%InterruptCount">
          <layer type="InstanceCountOverTime">
            <drawBy>
              <queryRef>/InterruptCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="rich" id="interrupts">
        <rowSet displayName="%Interrupt">
          <rowBy>
            <queryRef>/GenericInterrupt</queryRef>
            <queryRef>/Thread</queryRef>
            <queryRef>/GenericInterruptHWContext</queryRef>
            <queryRef>/GenericInterruptCore/GenericInterruptHWContext</queryRef>
            <queryRef>/GenericInterruptPackage/GenericInterruptCore/GenericInterruptHWContext</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/InterruptCount</queryRef>
            <queryRef>/InterruptRaiseCount</queryRef>
          </columnBy>
          <layer boolean:showText="true">
            <drawBy>
              <queryRef>/Interrupt</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/Interrupt</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/Interrupt</queryRef>
              <queryRef>/InterruptType</queryRef>
              <queryRef>/InterruptDurationType</queryRef>
              <queryRef>/InterruptIRQ</queryRef>
              <queryRef>/InterruptHWContext</queryRef>
            </tooltipBy>
          </layer>
          <layer type="EventMarker" boolean:visible="true">
            <drawBy>
              <queryRef>/InterruptRaiseMarker</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/InterruptRaiseMarker</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/InterruptRaise</queryRef>
              <queryRef>/InterruptRaiseType</queryRef>
              <queryRef>/InterruptRaiseIRQ</queryRef>
              <queryRef>/InterruptRaiseHwContext</queryRef>
            </tooltipBy>
          </layer>
          <layer type="EventMarker" boolean:visible="false">
            <drawBy>
              <queryRef>/SlowInterruptMarker/InterruptDurationType[%SlowTask]</queryRef>
            </drawBy>
          </layer>
          <layer type="InstanceCountOverTime">
            <drawBy>
              <queryRef>/InterruptCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
    </xsl:variable>
    <xsl:variable name="gpuTimelinePaneAttributes">
      <helpKeywordF1>intel.phe.configs.platform_view_f1179</helpKeywordF1>
      <description>%PlatformTimelineWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
    </xsl:variable>
    <xsl:variable name="gpuTimelineConfig">
      <ruler>
        <layer>
          <drawBy>
            <queryRef>/MarksGlobal</queryRef>
          </drawBy>
        </layer>
        <layer type="GlobalCrossLine" boolean:visible="false">
          <drawBy>
            <queryRef>/VSync</queryRef>
          </drawBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/Frame</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/FrameDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/Frame</queryRef>
            <queryRef>/FrameDomain</queryRef>
            <queryRef>/FrameType</queryRef>
            <queryRef>/FrameRate</queryRef>
          </tooltipBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/RegionGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/RegionDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/RegionDomain</queryRef>
            <queryRef>/RegionType</queryRef>
          </tooltipBy>
        </layer>
        <layer boolean:visible="false">
          <drawBy>
            <queryRef>/BarrierGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/BarrierDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/BarrierDomain</queryRef>
          </tooltipBy>
        </layer>
      </ruler>
      <area>
        <rowSet displayName="%FramesOverTime">
          <layer>
            <drawBy>
              <queryRef>/FrameRate</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area headerMode="" id="metrics_by_object">
        <rowSet>
          <rowBy>
            <vectorQueryInsert>/PMUTimelineRowBy</vectorQueryInsert>
            <sort>
              <queryRef>/GPUTime</queryRef>
            </sort>
          </rowBy>
          <columnBy>
            <queryRef>/PMUEventCount/PMUEventType</queryRef>
            <queryRef>/PreciseClockticks</queryRef>
            <queryRef>/PMUUserTime</queryRef>
            <queryRef>/CounterMetrics</queryRef>
            <queryRef>/GPUComputeTaskTimeGPUName</queryRef>
            <queryRef>/GPUTime</queryRef>
            <queryRef>/RegionTime</queryRef>
            <queryRef>/BarrierInstanceCount</queryRef>
          </columnBy>
          <queryMode>allRows</queryMode>
          <layer>
            <drawBy>
              <queryRef>/ThreadLifeTime</queryRef>
            </drawBy>
          </layer>
          <layer type="RowInterval" visibleOnLevels="Thread" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/ContextSwitches</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/ContextSwitchReason</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/ContextSwitchCpu</queryRef>
              <queryRef>/ContextSwitchReason</queryRef>
              <queryRef>/ContextSwitchSourceFile</queryRef>
              <queryRef>/ContextSwitchSourceLine</queryRef>
            </tooltipBy>
            <diveBy>
              <queryRef>/ContextSwitchCS</queryRef>
            </diveBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:visible="true">
            <drawBy>
              <queryRef>/PMUEventCount/PMUEventType</queryRef>
            </drawBy>
          </layer>
          <layer boolean:visible="false">
            <drawBy>
              <queryRef>/PreciseClockticks</queryRef>
            </drawBy>
          </layer>
          <layer type="InstanceCountOverTime">
            <drawBy>
              <instanceCountQuery>
                <queryInherit>/GPUUsageForGridRow</queryInherit>
                <maxEval>$logicalGPUCount + 1</maxEval>
              </instanceCountQuery>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupStart="true">
            <drawBy>
              <queryRef>/CounterMetrics/CounterType</queryRef>
            </drawBy>
          </layer>
          <layer visibleSeriesCount="1" boolean:seriesGroupEnd="true">
            <drawBy>
              <queryRef>/ThreadInstantValue/ThreadInstantValuesType</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread" boolean:showText="true">
            <drawBy>
              <queryRef>/TaskHierarchical</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/TaskType</queryRef>
              <queryRef>/TaskDurationType</queryRef>
              <queryRef>/TaskEndCallStack</queryRef>
            </tooltipBy>
            <colorBy>
              <queryRef>/TaskType</queryRef>
            </colorBy>
            <highlightBy int:groupId="3">
              <queryRef>/TaskGroupKey</queryRef>
            </highlightBy>
          </layer>
          <layer type="EventMarker" visibleOnLevels="Thread" boolean:visible="false">
            <drawBy>
              <queryRef>/SlowTaskMarker/TaskDurationType[%SlowTask]</queryRef>
            </drawBy>
          </layer>
          <layer type="Transition" boolean:visible="false" visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/TaskTransition</queryRef>
            </drawBy>
          </layer>
          <layer visibleOnLevels="Thread">
            <drawBy>
              <queryRef>/GPUComputeTask</queryRef>
            </drawBy>
            <tooltipBy>
              <queryRef>/GPUComputeTask</queryRef>
              <queryRef>/GPUComputeTaskPurposeShortName</queryRef>
              <queryRef>/GPUComputeGlobalDim</queryRef>
              <queryRef>/GPUComputeLocalDim</queryRef>
              <queryRef>/GPUComputeSimdWidth</queryRef>
            </tooltipBy>
            <highlightBy int:groupId="2">
              <queryRef>/GPUComputeTask</queryRef>
            </highlightBy>
            <hatchBy>
              <queryRef>/GPUComputeTaskPurpose</queryRef>
            </hatchBy>
          </layer>
        </rowSet>
      </area>
      <area id="raw_event_count_by_core">
        <rowSet>
          <rowBy>
            <queryRef>/PMUEventType</queryRef>
            <queryRef>/PMUEventType/PMUPackage/PMUCore/PMUHWContext</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/PMUEventCount</queryRef>
          </columnBy>
          <layer>
            <drawBy>
              <queryRef>/PMUEventCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="false">
        <rowSet displayName="%GPUEUActivity">
          <layer>
            <drawBy>
              <queryRef>/GPUCoreFrequency</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEUIdle</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEUActive</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEUStalled</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="false">
        <rowSet displayName="%GPUCSActivity">
          <layer>
            <drawBy>
              <queryRef>/GPUCSThreadIssued</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEuThreadOccupancy</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="false">
        <rowSet displayName="%GPUEUInstructions">
          <layer>
            <drawBy>
              <queryRef>/GPUEuAvgIpcRate</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEuFpuBothActive</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUEuSendActive</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="false">
        <rowSet displayName="%GPUMemoryAccessCoalescence">
          <layer>
            <drawBy>
              <queryRef>/GPUTypedReadCoalRatio</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUTypedWriteCoalRatio</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUUntypedReadCoalRatio</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUUntypedWriteCoalRatio</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="false">
        <rowSet displayName="%GPUL3CacheMissAndMemAccess">
          <layer boolean:scaleGroupStart="true">
            <drawBy>
              <queryRef>/GPUMemoryReadGB</queryRef>
            </drawBy>
          </layer>
          <layer boolean:scaleGroupEnd="true">
            <drawBy>
              <queryRef>/GPUMemoryWriteGB</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUL3Miss</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPULlcMissCount</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area id="computing_queue" rowOutlineStyle="dotted">
        <rowSet displayName="%ComputingQueue">
          <rowBy>
            <queryRef>/ComputingQueue</queryRef>
          </rowBy>
          <columnBy>
            <queryRef>/GPUComputeTaskTimeGPUName</queryRef>
            <queryRef>/ComputeQueueTime</queryRef>
          </columnBy>
          <queryMode>allRows</queryMode>
          <layer type="RowInterval" boolean:showColoringAsLegendItems="true" boolean:showText="true">
            <drawBy>
              <queryRef>/GPUComputeTask</queryRef>
            </drawBy>
            <highlightBy int:groupId="2">
              <queryRef>/GPUComputeTask</queryRef>
            </highlightBy>
            <tooltipBy>
              <queryRef>/GPUComputeTask</queryRef>
              <queryRef>/GPUComputeTaskPurposeShortName</queryRef>
              <queryRef>/GPUComputeSubmitThread</queryRef>
              <queryRef>/GPUComputeGlobalDim</queryRef>
              <queryRef>/GPUComputeLocalDim</queryRef>
              <queryRef>/GPUComputeSimdWidth</queryRef>
            </tooltipBy>
            <hatchBy>
              <queryRef>/GPUComputeTask</queryRef>
            </hatchBy>
            <colorBy>
              <queryRef>/GPUComputeTask</queryRef>
            </colorBy>
          </layer>
          <layer type="RowIntervalNested" boolean:showColoringAsLegendItems="true">
            <drawBy>
              <queryRef>/ComputeQueue</queryRef>
            </drawBy>
            <highlightBy int:groupId="2">
              <queryRef>/ComputeQueue</queryRef>
            </highlightBy>
            <tooltipBy>
              <queryRef>/ComputeQueueTaskName</queryRef>
              <queryRef>/ComputeQueuePurpose</queryRef>
              <queryRef>/ComputeQueueSubmitThread</queryRef>
              <queryRef>/GPUComputeGlobalDimQueue</queryRef>
              <queryRef>/GPUComputeLocalDimQueue</queryRef>
              <queryRef>/GPUComputeSimdWidthQueue</queryRef>
            </tooltipBy>
            <colorBy>
              <queryRef>/ComputeQueue</queryRef>
            </colorBy>
            <hatchBy>
              <queryRef>/ComputeQueue</queryRef>
            </hatchBy>
          </layer>
        </rowSet>
      </area>
      <area>
        <rowSet displayName="%GPUSoftQueue">
          <layer type="InstanceCountOverTime">
            <drawBy>
              <queryRef>/GPUQueue</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area>
        <rowSet displayName="%GPUUsageOverTime">
          <layer type="InstanceCountOverTime">
            <drawBy>
              <queryRef>/GPUUsageAggregated</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUGpuBusy</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/GPUTimeAllCoresCumulative</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
      <area boolean:maxLabels="true">
        <rowSet displayName="%SystemBandwidth">
          <layer>
            <drawBy>
              <queryRef>/OvertimeBandwidthSystem</queryRef>
            </drawBy>
          </layer>
        </rowSet>
      </area>
    </xsl:variable>
    <html id="summaryPane" displayName="%SummaryWindow">
      <filter boolean:manageGlobalFilter="false"/>
      <event handleList="KnobChangedEvent"/>
      <application name="summary"/>
      <helpKeywordF1>configs.interpret_result_summary_f1024</helpKeywordF1>
      <description>%CPUSleepStatesSummaryWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_summary"/>
      <config>
        <sections>
          <section type="tree" expanded="true">
            <header>
              <column>/TotalElapsedTime</column>
            </header>
            <tree valueAlign="right" int:autoExpansionLimit="100">
              <columns>
                <column>/MySummaryColumns</column>
              </columns>
            </tree>
          </section>
          <section type="tree" nullValue="hide" expanded="true">
            <header displayName="%ResultInfo"/>
            <description displayName="%ResultInfoDescription"/>
            <tree valueAlign="left">
              <columns>
                <column>/ResultInfo</column>
              </columns>
            </tree>
            <sections>
              <section type="tree" expanded="true" valueAlign="left">
                <header displayName="%CPU"/>
                <tree valueAlign="left">
                  <columns>
                    <column>/CPUInfo</column>
                    <column>/PhysicalCoreCount</column>
                  </columns>
                </tree>
              </section>
            </sections>
          </section>
          <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/metric">
            <xsl:for-each select="./boolean:top5_field_residency | ./boolean:value_count_top5 | ./boolean:field_count_top5 | ./boolean:field_count_converted_top5 | ./boolean:top5_value_residency | ./boolean:field_rate_top5 |
                      ./boolean:field_residency_histogram | ./boolean:field_rate_histogram | ./boolean:value_count_histogram | ./boolean:field_count_histogram | ./boolean:field_count_converted_histogram | ./boolean:value_residency_histogram">
              <xsl:choose>
                <xsl:when test="name(.)='boolean:top5_field_residency'">
                  <section type="grid" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                    </description>
                    <grid>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Time')"/>
                        </column>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Time')"/>
                          <xsl:text>Percent</xsl:text>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                      <sorting>
                        <xsl:value-of select="concat('/',../id, 'Time')"/>
                        <xsl:text>Percent</xsl:text>
                      </sorting>
                    </grid>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:value_count_top5'">
                  <section type="grid" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor)"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor)"/>
                      </xsl:attribute>
                    </description>
                    <grid>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Count')"/>
                        </column>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Count')"/>
                          <xsl:text>Percent</xsl:text>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Value')"/>
                      </grouping>
                      <sorting>
                        <xsl:value-of select="concat('/',../id, 'Count')"/>
                        <xsl:text>Percent</xsl:text>
                      </sorting>
                    </grid>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:field_count_top5'">
                  <section type="grid" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                    </description>
                    <grid>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Count')"/>
                        </column>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Count')"/>
                          <xsl:text>Percent</xsl:text>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                      <sorting>
                        <xsl:value-of select="concat('/',../id, 'Count')"/>
                        <xsl:text>Percent</xsl:text>
                      </sorting>
                    </grid>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:field_count_converted_top5'">
                  <section type="grid" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                    </description>
                    <grid>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'CountConverted')"/>
                        </column>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'CountConverted')"/>
                          <xsl:text>Percent</xsl:text>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                      <sorting>
                        <xsl:value-of select="concat('/',../id, 'CountConverted')"/>
                        <xsl:text>Percent</xsl:text>
                      </sorting>
                    </grid>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:top5_value_residency'">
                  <section type="grid" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name)"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor)"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name)"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor)"/>
                      </xsl:attribute>
                    </description>
                    <grid>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Time')"/>
                        </column>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Time')"/>
                          <xsl:text>Percent</xsl:text>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Value')"/>
                      </grouping>
                      <sorting>
                        <xsl:value-of select="concat('/',../id, 'Time')"/>
                        <xsl:text>Percent</xsl:text>
                      </sorting>
                    </grid>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:field_rate_top5'">
                  <section type="grid" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Rate')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/quantity_rate/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat('Top ', ../short_name, ' Rate')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/quantity_rate/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor)"/>
                      </xsl:attribute>
                    </description>
                    <grid>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Rate')"/>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                      <sorting>
                        <xsl:value-of select="concat('/',../id, 'Rate')"/>
                      </sorting>
                    </grid>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:field_residency_histogram'">
                  <section type="histogram" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="../short_name"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="../short_name"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                    </description>
                    <histogram>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Time')"/>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                    </histogram>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:field_rate_histogram'">
                  <section type="histogram" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Rate')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/quantity_rate/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Rate')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/quantity_rate/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                    </description>
                    <histogram>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Rate')"/>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                    </histogram>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:value_count_histogram'">
                  <section type="histogram" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                    </description>
                    <histogram>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Count')"/>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Value')"/>
                      </grouping>
                    </histogram>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:field_count_histogram'">
                  <section type="histogram" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                    </description>
                    <histogram>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Count')"/>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                    </histogram>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:field_count_converted_histogram'">
                  <section type="histogram" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="concat(../short_name, ' Count')"/>
                        <xsl:value-of select="concat(' in ', ../quantity/converted_units)"/>
                        <xsl:value-of select="concat(' by ', ../field_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                    </description>
                    <histogram>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'CountConverted')"/>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Field')"/>
                      </grouping>
                    </histogram>
                  </section>
                </xsl:when>
                <xsl:when test="name(.)='boolean:value_residency_histogram'">
                  <section type="histogram" expanded="false">
                    <header>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="../short_name"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                      <href>
                        <activate tabId="topDown{../id}Pane" handlerId="topDown{../id}Pane"/>
                      </href>
                    </header>
                    <description>
                      <xsl:attribute name="displayName">
                        <xsl:value-of select="../short_name"/>
                        <xsl:value-of select="concat(' by ', ../value_descriptor, ' Histogram')"/>
                      </xsl:attribute>
                    </description>
                    <histogram>
                      <columns>
                        <column>
                          <xsl:value-of select="concat('/',../id, 'Time')"/>
                        </column>
                      </columns>
                      <domain>/Entity</domain>
                      <grouping>
                        <xsl:value-of select="concat('/',../id, 'Value')"/>
                      </grouping>
                    </histogram>
                  </section>
                </xsl:when>
              </xsl:choose>
            </xsl:for-each>
          </xsl:for-each>
          <section type="grid" expanded="false">
            <header displayName="%TopKWLProcesses">
              <href>
                <activate tabId="topDownWLPane" handlerId="topDownWLPane"/>
              </href>
            </header>
            <grid>
              <columns>
                <column>/KernelWakelockCount</column>
                <column>/KernelWakelockTimePercentTop5</column>
              </columns>
              <sorting>/KernelWakelockTimePercentTop5</sorting>
              <grouping>/KernelWakelockLockProcess</grouping>
            </grid>
          </section>
          <section type="grid" expanded="false">
            <header displayName="%PMUEvents"/>
            <grid allRows="true">
              <columns>
                <column>/PMUEventCount</column>
                <column>/PMUSampleCount</column>
                <column>/PMUEventsPerSample</column>
              </columns>
              <href>
                <activate tabId="bottomUpPane" handlerId="bottomUpPane">
                  <column/>
                </activate>
              </href>
              <sorting>/PMUEventTypeDistinct</sorting>
              <grouping>/PMUEventTypeDistinct</grouping>
            </grid>
          </section>
          <section type="grid" expanded="false">
            <header displayName="%UncoreEvent"/>
            <grid>
              <columns>
                <column>/UncoreEventCount</column>
              </columns>
              <href>
                <activate tabId="uncoreBottomUpPane" handlerId="uncoreBottomUpPane">
                  <column/>
                </activate>
              </href>
              <sorting>/UncoreEventType</sorting>
              <grouping>/UncoreEventType</grouping>
            </grid>
          </section>
          <section type="histogram" expanded="false">
            <header displayName="%InterruptDurationChart"/>
            <description displayName="%InterruptDurationChartDescription"/>
            <histogram>
              <slider knob="interruptThreshold"/>
              <color>/InterruptDurationType</color>
              <columns>
                <column>/InterruptCount</column>
              </columns>
              <grouping>/Interrupt/InterruptDuration</grouping>
              <sorting>/InterruptTime</sorting>
            </histogram>
          </section>
        </sections>
        <messages>
          <noValue displayName="%NoMetricValue"/>
          <noValueDescription displayName="%NoMetricValueDescription"/>
          <noData displayName="%NoDataToShowOnActiveTime"/>
          <notChanged displayName="%NotChanged"/>
          <unexpectedError displayName="%UnexpectedErrorOnLoadingData"/>
          <notSummableValue displayName="%NotSummable"/>
          <notSummableValueDescription displayName="%NotSummableDescription"/>
          <other displayName="%Others"/>
          <detailsLink displayName="%DetailsLink"/>
          <apply displayName="%Apply"/>
          <applyWarning displayName="%ApplyButtonWarning"/>
          <applyWaiting displayName="%ApplyButtonWaiting"/>
          <colorbandTooltip displayName="%ColorbandTooltip"/>
          <copyToClipboard displayName="%CopyToClipboard"/>
        </messages>
      </config>
    </html>
    <xsl:variable name="corr_pane_attributes">
      <helpKeywordF1>intel.phe.configs.correllatemetrics_f1149</helpKeywordF1>
      <description>%CorrelateTimelineWindowDescription</description>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
    </xsl:variable>
    <xsl:variable name="corr_config">
      <ruler>
        <layer>
          <drawBy>
            <queryRef>/MarksGlobal</queryRef>
          </drawBy>
        </layer>
        <layer type="GlobalCrossLine" boolean:visible="false">
          <drawBy>
            <queryRef>/VSync</queryRef>
          </drawBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/Frame</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/FrameDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/Frame</queryRef>
            <queryRef>/FrameDomain</queryRef>
            <queryRef>/FrameType</queryRef>
            <queryRef>/FrameRate</queryRef>
          </tooltipBy>
        </layer>
        <layer>
          <drawBy>
            <queryRef>/RegionGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/RegionDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/RegionDomain</queryRef>
            <queryRef>/RegionType</queryRef>
          </tooltipBy>
        </layer>
        <layer boolean:visible="false">
          <drawBy>
            <queryRef>/BarrierGlobal</queryRef>
          </drawBy>
          <colorBy>
            <queryRef>/BarrierDomain</queryRef>
          </colorBy>
          <tooltipBy>
            <queryRef>/BarrierDomain</queryRef>
          </tooltipBy>
        </layer>
      </ruler>
      <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/timeline_area">
        <area headerMode="rich" id="{./id}">
          <xsl:if test="./boolean:show_YScale">
            <xsl:attribute name="boolean:showYScale">true</xsl:attribute>
          </xsl:if>
          <rowSet>
            <xsl:attribute name="displayName">
              <xsl:value-of select="./name"/>
            </xsl:attribute>
            <xsl:if test="./add_queryRef_to_rowBy">
              <rowBy>
                <queryRef>
                  <xsl:value-of select="./add_queryRef_to_rowBy"/>
                </queryRef>
              </rowBy>
            </xsl:if>
            <xsl:if test="./add_queryRef_to_columnBy">
              <columnBy>
                <xsl:for-each select="./add_queryRef_to_columnBy">
                  <queryRef>
                    <xsl:value-of select="."/>
                  </queryRef>
                </xsl:for-each>
              </columnBy>
            </xsl:if>
            <xsl:variable name="currentAreaId">
              <xsl:value-of select="./unique_id"/>
            </xsl:variable>
            <xsl:for-each select="/bag/metrics/metric[timeline_group = $currentAreaId]">
              <xsl:choose>
                <xsl:when test="./type = 'SFSV'">
                  <layer boolean:allowToHideSeries="true" type="EventMarker" boolean:showColoringAsLegendItems="true">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'AllFields','/', ./id, 'Field')"/>
                      </queryRef>
                      <displayAttributes>
                        <align>top</align>
                      </displayAttributes>
                    </drawBy>
                    <colorBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Field')"/>
                      </queryRef>
                    </colorBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Field')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                </xsl:when>
                <xsl:when test="./type = 'TFSC'">
                  <layer boolean:allowToHideSeries="true">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'TimePercent', '/', ./id, 'Field' )"/>
                      </queryRef>
                      <displayAttributes>
                        <timelineFormat>area</timelineFormat>
                      </displayAttributes>
                    </drawBy>
                    <colorBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Field')"/>
                      </queryRef>
                    </colorBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'TimePercent', '/', ./id, 'Field')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                  <xsl:if test="./boolean:value_metric = 'true' and ./boolean:time_metric = 'true'">
                    <layer type="Overtime">
                      <drawBy>
                        <queryRef>
                          <xsl:value-of select="concat('/', ./id, 'Value')"/>
                        </queryRef>
                        <displayAttributes>
                          <timelineFormat>line</timelineFormat>
                          <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                        </displayAttributes>
                      </drawBy>
                    </layer>
                  </xsl:if>
                </xsl:when>
                <xsl:when test="./type = 'TE'">
                  <layer boolean:allowToHideSeries="true">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'FieldHierarchical')"/>
                      </queryRef>
                    </drawBy>
                    <colorBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'FieldHierarchical')"/>
                      </queryRef>
                    </colorBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'FieldHierarchical')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                  <layer boolean:allowToHideSeries="true" type="EventMarker" boolean:showColoringAsLegendItems="true">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'AllFields', '/', ./id, 'Field')"/>
                      </queryRef>
                      <displayAttributes>
                        <align>top</align>
                      </displayAttributes>
                    </drawBy>
                    <colorBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Field')"/>
                      </queryRef>
                    </colorBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Field')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                  <layer boolean:visible="false">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Count')"/>
                      </queryRef>
                      <displayAttributes>
                        <timelineFormat>line</timelineFormat>
                      </displayAttributes>
                    </drawBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Count')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                </xsl:when>
                <xsl:when test="./type = 'SFSC'">
                  <layer visibleOnLevels="Entity" boolean:allowToHideSeries="true">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                      </queryRef>
                      <displayAttributes>
                        <timelineFormat>area</timelineFormat>
                      </displayAttributes>
                    </drawBy>
                    <colorBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Field')"/>
                      </queryRef>
                    </colorBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                  <layer visibleOnLevels="{./id}Field" boolean:allowToHideSeries="true">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                      </queryRef>
                      <displayAttributes>
                        <timelineFormat>heatmap</timelineFormat>
                      </displayAttributes>
                    </drawBy>
                    <colorBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Field')"/>
                      </queryRef>
                    </colorBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                  <layer type="EventMarker" boolean:visible="false">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'FieldMarker')"/>
                      </queryRef>
                    </drawBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'FieldMarker')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                </xsl:when>
                <xsl:when test="./type = 'SV'">
                  <layer type="Overtime">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Value')"/>
                      </queryRef>
                      <displayAttributes>
                        <timelineFormat>dot</timelineFormat>
                        <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                      </displayAttributes>
                    </drawBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Value')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                </xsl:when>
                <xsl:when test="./type = 'SC'">
                  <xsl:variable name="id">
                    <xsl:value-of select="./id"/>
                  </xsl:variable>
                  <layer type="Overtime" boolean:allowToHideSeries="true" boolean:scaleGroupStart="true">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id,'CountConvertedTimeline')"/>
                      </queryRef>
                      <displayAttributes>
                        <timelineFormat>line</timelineFormat>
                        <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                      </displayAttributes>
                    </drawBy>
                    <tooltipBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id,'CountConvertedTimeline')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Process')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                      </queryRef>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id, 'Info')"/>
                      </queryRef>
                    </tooltipBy>
                  </layer>
                  <xsl:for-each select="./fields/field">
                    <xsl:choose>
                      <xsl:when test="position()=last()">
                        <layer type="Overtime" boolean:allowToHideSeries="true" boolean:scaleGroupEnd="true">
                          <drawBy>
                            <queryRef>
                              <xsl:value-of select="concat('/', $id,'CountConvertedTimeline', .)"/>
                            </queryRef>
                            <displayAttributes>
                              <timelineFormat>line</timelineFormat>
                              <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                            </displayAttributes>
                          </drawBy>
                        </layer>
                      </xsl:when>
                      <xsl:otherwise>
                        <layer type="Overtime" boolean:allowToHideSeries="true">
                          <drawBy>
                            <queryRef>
                              <xsl:value-of select="concat('/', $id,'CountConvertedTimeline', .)"/>
                            </queryRef>
                            <displayAttributes>
                              <timelineFormat>line</timelineFormat>
                              <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                            </displayAttributes>
                          </drawBy>
                        </layer>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <layer type="EventMarker" boolean:visible="false">
                    <drawBy>
                      <queryRef>
                        <xsl:value-of select="concat('/', ./id,'FieldMarker')"/>
                      </queryRef>
                    </drawBy>
                  </layer>
                </xsl:when>
              </xsl:choose>
            </xsl:for-each>
          </rowSet>
        </area>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="corr_staticAreas">
      <xsl:copy-of select="exsl:node-set($timelineWLConfig)//area"/>
      <xsl:copy-of select="exsl:node-set($eventCountTimelineConfig)//area"/>
      <xsl:copy-of select="exsl:node-set($sampleCountTimelineConfig)//area"/>
      <xsl:copy-of select="exsl:node-set($uncoreTimelineConfig)//area"/>
      <xsl:copy-of select="exsl:node-set($platformTimelineConfig)//area"/>
      <xsl:copy-of select="exsl:node-set($gpuTimelineConfig)//area"/>
    </xsl:variable>
    <xsl:if test="not(exsl:is_compare_mode())">
      <html id="correlateTimelinePane" displayName="Correlated Metrics">
        <xsl:copy-of select="$corr_pane_attributes"/>
        <application name="timeline"/>
        <filter handleList="global,selection"/>
        <config>
          <xsl:copy-of select="$corr_config"/>
          <xsl:copy-of select="$corr_staticAreas"/>
        </config>
      </html>
    </xsl:if>
    <html id="quickFilterPane" displayName="%FilterBar">
      <application name="qfilter"/>
      <filter handleList="global" boolean:manageGlobalFilter="true"/>
      <config>
        <messages>
          <ofLabel displayName="%OfLabel"/>
          <metricTooltip displayName="%MetricTooltip"/>
          <clearFilterTooltip displayName="%ClearFilterTooltip"/>
          <any displayName="%Any"/>
          <filterLabel displayName="%FilterBar"/>
          <selectLabel displayName="%SelectLabel"/>
          <tooltip2dPartLabel displayName="%Tooltip2dPartLabel"/>
        </messages>
      </config>
    </html>
    <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/tab">
      <xsl:variable name="currentTabId">
        <xsl:value-of select="./unique_id"/>
      </xsl:variable>
      <xsl:variable name="pane_attributes">
        <description>
          <xsl:value-of select="./name"/>
        </description>
        <helpKeywordF1>intel.phe.configs.power_perf_viewpoint</helpKeywordF1>
        <icon file="client.dat#zip:images.xrc" image="tab_timeline" />
      </xsl:variable>
      <xsl:variable name="config">
        <ruler>
          <layer>
            <drawBy>
              <queryRef>/MarksGlobal</queryRef>
            </drawBy>
          </layer>
          <layer type="GlobalCrossLine" boolean:visible="false">
            <drawBy>
              <queryRef>/VSync</queryRef>
            </drawBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/Frame</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/FrameDomain</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/Frame</queryRef>
              <queryRef>/FrameDomain</queryRef>
              <queryRef>/FrameType</queryRef>
              <queryRef>/FrameRate</queryRef>
            </tooltipBy>
          </layer>
          <layer>
            <drawBy>
              <queryRef>/RegionGlobal</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/RegionDomain</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/RegionDomain</queryRef>
              <queryRef>/RegionType</queryRef>
            </tooltipBy>
          </layer>
          <layer boolean:visible="false">
            <drawBy>
              <queryRef>/BarrierGlobal</queryRef>
            </drawBy>
            <colorBy>
              <queryRef>/BarrierDomain</queryRef>
            </colorBy>
            <tooltipBy>
              <queryRef>/BarrierDomain</queryRef>
            </tooltipBy>
          </layer>
        </ruler>
        <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/timeline_area">
          <xsl:variable name="currentAreaId">
            <xsl:value-of select="./unique_id"/>
          </xsl:variable>
          <xsl:if test="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/metric[tab_group = $currentTabId and timeline_group = $currentAreaId]">
            <area headerMode="rich" id="{./id}">
              <xsl:if test="./boolean:show_YScale">
                <xsl:attribute name="boolean:showYScale">true</xsl:attribute>
              </xsl:if>
              <rowSet>
                <xsl:attribute name="displayName">
                  <xsl:value-of select="./name"/>
                </xsl:attribute>
                <xsl:if test="./add_queryRef_to_rowBy">
                  <rowBy>
                    <queryRef>
                      <xsl:value-of select="./add_queryRef_to_rowBy"/>
                    </queryRef>
                  </rowBy>
                </xsl:if>
                <xsl:if test="./add_queryRef_to_columnBy">
                  <columnBy>
                    <xsl:for-each select="./add_queryRef_to_columnBy">
                      <queryRef>
                        <xsl:value-of select="."/>
                      </queryRef>
                    </xsl:for-each>
                  </columnBy>
                </xsl:if>
                <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/metric[tab_group = $currentTabId and timeline_group = $currentAreaId]">
                  <xsl:choose>
                    <xsl:when test="./type = 'SFSV'">
                      <layer boolean:allowToHideSeries="true" type="EventMarker" boolean:showColoringAsLegendItems="true">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'AllFields','/', ./id, 'Field')"/>
                          </queryRef>
                          <displayAttributes>
                            <align>top</align>
                          </displayAttributes>
                        </drawBy>
                        <colorBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Field')"/>
                          </queryRef>
                        </colorBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Field')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                    </xsl:when>
                    <xsl:when test="./type = 'TFSC'">
                      <layer boolean:allowToHideSeries="true">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'TimePercent', '/', ./id, 'Field' )"/>
                          </queryRef>
                          <displayAttributes>
                            <timelineFormat>area</timelineFormat>
                          </displayAttributes>
                        </drawBy>
                        <colorBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Field')"/>
                          </queryRef>
                        </colorBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'TimePercent', '/', ./id, 'Field')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                      <xsl:if test="./boolean:value_metric = 'true' and ./boolean:time_metric = 'true'">
                        <layer type="Overtime">
                          <drawBy>
                            <queryRef>
                              <xsl:value-of select="concat('/', ./id, 'Value')"/>
                            </queryRef>
                            <displayAttributes>
                              <timelineFormat>line</timelineFormat>
                              <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                            </displayAttributes>
                          </drawBy>
                          <colorBy>
                             <queryRef>
                               <xsl:value-of select="concat('/', ./id, 'Field')"/>
                             </queryRef>
                          </colorBy>
                        </layer>
                      </xsl:if>
                    </xsl:when>
                    <xsl:when test="./type = 'TE'">
                      <layer boolean:allowToHideSeries="true">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'FieldHierarchical')"/>
                          </queryRef>
                        </drawBy>
                        <colorBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'FieldHierarchical')"/>
                          </queryRef>
                        </colorBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'FieldHierarchical')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                      <layer boolean:allowToHideSeries="true" type="EventMarker" boolean:showColoringAsLegendItems="true">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'AllFields', '/', ./id, 'Field')"/>
                          </queryRef>
                          <displayAttributes>
                            <align>top</align>
                          </displayAttributes>
                        </drawBy>
                        <colorBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Field')"/>
                          </queryRef>
                        </colorBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Field')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                      <layer boolean:visible="false">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Count')"/>
                          </queryRef>
                          <displayAttributes>
                            <timelineFormat>line</timelineFormat>
                          </displayAttributes>
                        </drawBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Count')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                    </xsl:when>
                    <xsl:when test="./type = 'SFSC'">
                      <layer visibleOnLevels="Entity" boolean:allowToHideSeries="true">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                          </queryRef>
                          <displayAttributes>
                            <timelineFormat>area</timelineFormat>
                          </displayAttributes>
                        </drawBy>
                        <colorBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Field')"/>
                          </queryRef>
                        </colorBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                      <layer visibleOnLevels="{./id}Field" boolean:allowToHideSeries="true">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                          </queryRef>
                          <displayAttributes>
                            <timelineFormat>heatmap</timelineFormat>
                          </displayAttributes>
                        </drawBy>
                        <colorBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Field')"/>
                          </queryRef>
                        </colorBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'TimePercent', '/' , ./id, 'Field')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                      <layer type="EventMarker" boolean:visible="false">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'FieldMarker')"/>
                          </queryRef>
                        </drawBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'FieldMarker')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                    </xsl:when>
                    <xsl:when test="./type = 'SV'">
                      <layer type="Overtime">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Value')"/>
                          </queryRef>
                          <displayAttributes>
                            <timelineFormat>dot</timelineFormat>
                            <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                          </displayAttributes>
                        </drawBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Value')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                    </xsl:when>
                    <xsl:when test="./type = 'SC'">
                      <xsl:variable name="id">
                        <xsl:value-of select="./id"/>
                      </xsl:variable>
                      <layer type="Overtime" boolean:allowToHideSeries="true" boolean:scaleGroupStart="true">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id,'CountConvertedTimeline')"/>
                          </queryRef>
                          <displayAttributes>
                            <timelineFormat>line</timelineFormat>
                            <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                          </displayAttributes>
                        </drawBy>
                        <tooltipBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id,'CountConvertedTimeline')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Process')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ProcessID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Thread')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'ThreadID')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoIdDesc')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'InfoId')"/>
                          </queryRef>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id, 'Info')"/>
                          </queryRef>
                        </tooltipBy>
                      </layer>
                      <xsl:for-each select="./fields/field">
                      <xsl:choose>
                        <xsl:when test="position()=last()">
                          <layer type="Overtime" boolean:allowToHideSeries="true" boolean:scaleGroupEnd="true">
                            <drawBy>
                              <queryRef>
                                <xsl:value-of select="concat('/', $id,'CountConvertedTimeline', .)"/>
                              </queryRef>
                              <displayAttributes>
                                <timelineFormat>line</timelineFormat>
                                <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                              </displayAttributes>
                            </drawBy>
                          </layer>
                        </xsl:when>
                        <xsl:otherwise>
                          <layer type="Overtime" boolean:allowToHideSeries="true">
                            <drawBy>
                              <queryRef>
                                <xsl:value-of select="concat('/', $id,'CountConvertedTimeline', .)"/>
                              </queryRef>
                              <displayAttributes>
                                <timelineFormat>line</timelineFormat>
                                <boolean:timelineShowZeroValues>true</boolean:timelineShowZeroValues>
                              </displayAttributes>
                            </drawBy>
                          </layer>
                        </xsl:otherwise>
                      </xsl:choose>
                      </xsl:for-each>
                      <layer type="EventMarker" boolean:visible="false">
                        <drawBy>
                          <queryRef>
                            <xsl:value-of select="concat('/', ./id,'FieldMarker')"/>
                          </queryRef>
                        </drawBy>
                      </layer>
                    </xsl:when>
                  </xsl:choose>
                </xsl:for-each>
              </rowSet>
            </area>
          </xsl:if>
        </xsl:for-each>
      </xsl:variable>
      <xsl:if test="not(exsl:is_compare_mode())">
        <html id="timeline{./id}Pane" displayName="{./name}">
          <xsl:copy-of select="$pane_attributes"/>
          <application name="timeline"/>
          <filter handleList="global,selection"/>
          <config>
            <xsl:copy-of select="$config"/>
          </config>
        </html>
      </xsl:if>
    </xsl:for-each>
    <xsl:for-each select="document('result://viewpoint/power_viewpoint.xml')/bag/metrics/metric">
      <xsl:variable name="topDownPaneParams">
        <params id="topDown{./id}Pane"
                 displayName="{./short_name}"
                 helpKeyword="intel.phe.configs.power_perf_viewpoint"
                 groupings="{./id}Rows"
                 sorting="EntityHierarchy"
                 defaultGrouping="/EntityHierarchy"
                 errorMessage="ErrorNoData"
                 groupingItems="{./id}TimePercent"
                 columns="{./id}Columns"
                 expandLevels="100"
                 queryType="auto"
                 stackMode="chain"
                 localized="yes">
          <xsl:attribute name="description">
            <xsl:choose>
              <xsl:when test="./type = 'SFSV' and ./quantity">
                <xsl:value-of select="concat(./long_name, ' in ', ./quantity/converted_units)"/>
              </xsl:when>
              <xsl:when test="./type= 'SV'">
                <xsl:value-of select="concat(./long_name, ' in ', ./quantity/converted_units)"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="./long_name"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
        </params>
      </xsl:variable>
      <xsl:variable name="topDownFileName">
        <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
        <xsl:for-each select="exsl:node-set($topDownPaneParams)//@*">
          <xsl:value-of select="concat(name(), '=', translate(., ' ', '~'))"/>
          <xsl:text>&amp;</xsl:text>
        </xsl:for-each>
      </xsl:variable>
      <xsl:copy-of select="document($topDownFileName)"/>
    </xsl:for-each>
    <xsl:if test="not(exsl:is_compare_mode())">
      <html id="timelineWLPane" displayName="%TimelineWindow">
        <xsl:copy-of select="$timelineWLPaneAttributes"/>
        <application name="timeline"/>
        <filter handleList="global,selection"/>
        <config>
          <xsl:copy-of select="$timelineWLConfig"/>
        </config>
      </html>
    </xsl:if>
    <xsl:if test="not(exsl:is_compare_mode())">
      <html id="eventCountTimelinePane" displayName="%PlatformTimelineWindow">
        <xsl:copy-of select="$eventCountTimelinePaneAttributes"/>
        <application name="timeline"/>
        <filter handleList="global,selection"/>
        <config>
          <xsl:copy-of select="$eventCountTimelineConfig"/>
        </config>
      </html>
    </xsl:if>
    <xsl:if test="not(exsl:is_compare_mode())">
      <html id="sampleCountTimelinePane" displayName="%PlatformTimelineWindow">
        <xsl:copy-of select="$sampleCountTimelinePaneAttributes"/>
        <application name="timeline"/>
        <filter handleList="global,selection"/>
        <config>
          <xsl:copy-of select="$sampleCountTimelineConfig"/>
        </config>
      </html>
    </xsl:if>
    <xsl:if test="not(exsl:is_compare_mode())">
      <html id="uncoreTimelinePane" displayName="%UncoreTimelineWindow">
        <xsl:copy-of select="$uncoreTimelinePaneAttributes"/>
        <application name="timeline"/>
        <filter handleList="global,selection"/>
        <config>
          <xsl:copy-of select="$uncoreTimelineConfig"/>
        </config>
      </html>
    </xsl:if>
    <xsl:if test="not(exsl:is_compare_mode())">
      <html id="platformTimelinePane" displayName="%PlatformTimelineWindow">
        <xsl:copy-of select="$platformTimelinePaneAttributes"/>
        <application name="timeline"/>
        <filter handleList="global,selection"/>
        <config>
          <xsl:copy-of select="$platformTimelineConfig"/>
        </config>
      </html>
    </xsl:if>
    <xsl:if test="not(exsl:is_compare_mode())">
      <html id="gpuTimelinePane" displayName="%PlatformTimelineWindow">
        <xsl:copy-of select="$gpuTimelinePaneAttributes"/>
        <application name="timeline"/>
        <filter handleList="global,selection"/>
        <config>
          <xsl:copy-of select="$gpuTimelineConfig"/>
        </config>
      </html>
    </xsl:if>
    <xsl:variable name="quickFilterWLPane">
      <params id="quickFilterWLPane"
              metrics="WLDataOfInterest"
              groupings ="/KernelWakelockObject/KernelWakelockUnlockReason/KernelWakelockLockProcess/KernelWakelockUnlockProcess"
              showLoopKnob="false"
              showInlineKnob="false"
              showCalleeAttributionKnob="false"/>
    </xsl:variable>
    <xsl:variable name="qfilterFileWLName">
      <xsl:text>config://viewpoint/include/filterbar.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($quickFilterWLPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($qfilterFileWLName)"/>
    <xsl:variable name="topDownWLPane">
      <params id="topDownWLPane"
              displayName="WakelockWindow"
              description="WakelockBottomUpWindowDescription"
              helpKeyword="intel.phe.configs.wakelocks_f1156"
              errorMessage="ErrorNoData"
              groupings="WLGridRowBy"
              sorting="WLSorting"
              defaultGrouping="/KernelWakelockObject"
              groupingItems="no"
              columns="WLColumns"
              queryType="auto"
              expandLevels="100"/>
    </xsl:variable>
    <xsl:variable name="topDownWLFileName">
      <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($topDownWLPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($topDownWLFileName)"/>
    <xsl:variable name="bottomUpEventCountPane">
      <params id="bottomUpEventCountPane"
              displayName="EventCountBottomUpWindow"
              description="PMUEventsBottomUpWindowDescription"
              helpKeyword="configs.pmu_events_f1199"
              groupings="PMUGridRowBy"
              errorMessage="ErrorNoDataEBS"
              sorting="MySorting"
              queryType="auto"/>
    </xsl:variable>
    <xsl:variable name="eventCountBottomUpFileName">
      <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($bottomUpEventCountPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($eventCountBottomUpFileName)"/>
    <xsl:variable name="sampleCountBottomUpPane">
      <params id="sampleCountBottomUpPane"
              displayName="EventSampleCountBottomUpWindow"
              description="PMUSamplesBottomUpWindowDescription"
              groupings="PMUGridRowBy"
              sorting="MySorting"
              errorMessage="ErrorNoDataEBS"
              columns="PMUSamplesGUIandCLIColumns"
              queryType="auto"/>
    </xsl:variable>
    <xsl:variable name="sampleCountBottomUpFileName">
      <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($sampleCountBottomUpPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($sampleCountBottomUpFileName)"/>
    <xsl:variable name="uncoreBottomUpPane">
      <params id="uncoreBottomUpPane"
              displayName="UncoreEvent"
              description="PMUEventsBottomUpWindowDescription"
              groupings="UncoreGridRowBy"
              sorting="MySorting"
              defaultGrouping="/UncorePackage"
              errorMessage="ErrorNoDataEBS"
              columns="UncoreColumns"/>
    </xsl:variable>
    <xsl:variable name="uncoreBottomUpFileName">
      <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($uncoreBottomUpPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($uncoreBottomUpFileName)"/>
    <xsl:variable name="callerCalleePane">
      <params description="PMUEventsCallerCalleeWindowDescription"
              callerCalleeColumns="PMUEventsDataColumns"/>
    </xsl:variable>
    <xsl:variable name="callerCalleeFileName">
      <xsl:text>config://viewpoint/include/caller-callee.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($callerCalleePane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($callerCalleeFileName)/root/*"/>
    <xsl:variable name="topDownPane">
      <params groupings="TopDownGridRowBy"
              sorting="MySorting"
              errorMessage="ErrorNoDataEBS"
              id="topDownPane"
              displayName="TopDownTreeWindow"
              description="PMUEventsTopDownTreeWindowDescription"
              helpKeyword="configs.interpret_calltree_f1030"
              queryType="auto"
              groupingItems="no"/>
    </xsl:variable>
    <xsl:variable name="topDownFileName">
      <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($topDownPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($topDownFileName)"/>
    <xsl:variable name="gpuMetricsBottomUpPane">
      <params id="gpuMetricsBottomUpPane"
              groupings="PMUGridRowBy"
              sorting="MySorting"
              errorMessage="ErrorNoDataEBS"
              displayName="EventCountBottomUpWindow"
              description="PMUEventsBottomUpWindowDescription"
              helpKeyword="configs.pmu_events_f1199"
              queryType="auto"/>
    </xsl:variable>
    <xsl:variable name="gpuMetricsFileName">
      <xsl:text>config://viewpoint/include/grid.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($gpuMetricsBottomUpPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($gpuMetricsFileName)"/>
    <xsl:variable name="SEPQuickFilterPane">
      <params id="SEPQuickFilterPane"
              metrics="DOIMetrics"
              groupings ="/Process/Thread/Module"
              showLoopKnob="false"
              showInlineKnob="false"
              showCalleeAttributionKnob="true"/>
    </xsl:variable>
    <xsl:variable name="SEPQFilterFileName">
      <xsl:text>config://viewpoint/include/filterbar.xsl?</xsl:text>
      <xsl:for-each select="exsl:node-set($SEPQuickFilterPane)//@*">
        <xsl:value-of select="concat(name(), '=', .)"/>
        <xsl:text>&amp;</xsl:text>
      </xsl:for-each>
    </xsl:variable>
    <xsl:copy-of select="document($SEPQFilterFileName)"/>
    <html id="gpuDiagramPane" displayName="%gpuDiagramPane">
      <description>%gpuDiagramPaneDescription</description>
      <helpKeywordF1>configs.caller_f1048</helpKeywordF1>
      <icon file="client.dat#zip:images.xrc" image="tab_timeline"/>
      <additionalParams boolean:showInDiff="false"/>
      <application name="diagram"/>
      <subPage href="gpu"/>
      <filter handleList="selection"/>
      <config>
        <grid>
          <columns>
            <column>/GPUEUActive</column>
            <column>/GPUEUStalled</column>
            <column>/GPUEUIdle</column>
            <column>/GPUEuThreadOccupancy</column>
            <column>/GPUL3MissRate</column>
            <column>/GPUL3MissRatio</column>
            <column>/GPUSamplerBusy</column>
            <column>/GPUMemoryReadBandwidth</column>
            <column>/GPUMemoryWriteBandwidth</column>
            <column>/GPUSharedLocalMemoryReadBandwidth</column>
            <column>/GPUSharedLocalMemoryWriteBandwidth</column>
            <column>/GPUUntypedMemoryReadBandwidth</column>
            <column>/GPUUntypedMemoryWriteBandwidth</column>
            <column>/GPUUntypedMemoryReadBDWAbsMaxRatio</column>
            <column>/GPUUntypedMemoryWriteBDWAbsMaxRatio</column>
            <column>/GPUL3SamplerBandwidth</column>
            <column>/GPUL3ShaderBandwidth</column>
            <column>/GPUSLMReadAbsMaxRatio</column>
            <column>/GPUSLMWriteAbsMaxRatio</column>
            <column>/GPUL3ShaderBDWAbsMaxRatio</column>
            <column>/GPUL3SamplerBDWAbsMaxRatio</column>
            <column>/GPUTypedMemoryWriteBandwidth</column>
            <column>/GPUTypedMemoryWriteBDWAbsMaxRatio</column>
            <column>/GPUTypedMemoryWriteGB</column>
            <column>/GPUTypedMemoryReadBandwidth</column>
            <column>/GPUTypedMemoryReadBDWAbsMaxRatio</column>
            <column>/GPUTypedMemoryReadGB</column>
            <column>/GPULlcMissRate</column>
            <column>/GPULlcMissRatio</column>
            <column>/GPUSamplerBottleneck</column>
            <column>/GPUMemoryReadBDWAbsMaxRatio</column>
            <column>/GPUMemoryWriteBDWAbsMaxRatio</column>
            <column>/GPUUntypedReadCoalRatio</column>
            <column>/GPUUntypedWriteCoalRatio</column>
            <column>/GPUTypedReadCoalRatio</column>
            <column>/GPUTypedWriteCoalRatio</column>
            <column>/GPUCSThreadIssuedRate</column>
            <column>/AverageReadBandwidthGB</column>
            <column>/AverageWriteBandwidthGB</column>
            <column>/GPUDataReadGB</column>
            <column>/GPUDataWrittenGB</column>
            <column>/GPUReadBandwidthAbsMaxRatio</column>
            <column>/GPUWriteBandwidthAbsMaxRatio</column>
            <column>/GlobalCPUUtilization</column>
          </columns>
        </grid>
        <message id="noDataHeader" displayName="%ErrorNoData"/>
        <message id="noDataBody" displayName="%ErrorNoDataGPUDiagram"/>
        <message id="unexpectedError" displayName="%UnexpectedErrorOnLoadingData"/>
      </config>
    </html>
  </paneLibrary>
  <queryLibrary>
    <vectorQuery id="MySummaryColumns">
      <queryRef>/AvailableCoreTime</queryRef>
    </vectorQuery>
    <vectorQuery id="WLSorting">
      <queryRef>/KernelWakelockCount</queryRef>
    </vectorQuery>
    <instanceCountQuery id="WLDataOfInterest">
      <queryInherit>/KernelWakelockCount</queryInherit>
    </instanceCountQuery>
    <vectorQuery id="WLGridRowBy">
      <queryRef>/KernelWakelockObject</queryRef>
      <queryRef>/KernelWakelockObject/KernelWakelockLockProcess/KernelWakelockUnlockProcess</queryRef>
      <queryRef>/KernelWakelockLockProcess/KernelWakelockObject</queryRef>
      <queryRef>/KernelWakelockLockProcess/KernelWakelockUnlockProcess/KernelWakelockObject</queryRef>
      <queryRef>/KernelWakelockObject/KernelWakelockLockProcess/KernelWakelockLockThread</queryRef>
      <queryRef>/KernelWakelockObject/KernelWakelockUnlockProcess/KernelWakelockUnlockThread</queryRef>
      <queryRef>/KernelWakelockObject/KernelWakelockLockProcess/KernelWakelockLockThread</queryRef>
      <queryRef>/KernelWakelockObject/KernelWakelockUnlockProcess/KernelWakelockUnlockThread</queryRef>
      <queryRef>/UserWakelockUIDName</queryRef>
      <queryRef>/UserWakelockUIDName/UserWakelockTag</queryRef>
      <queryRef>/UserWakelockUIDName/UserWakelockLockProcess/UserWakelockTag</queryRef>
      <queryRef>/UserWakelockLockProcess/UserWakelockTag</queryRef>
      <queryRef>/UserWakelockLockProcess/UserWakelockUnlockProcess/UserWakelockTag</queryRef>
      <queryRef>/UserWakelockTag</queryRef>
    </vectorQuery>
    <vectorQuery id="ViewpointGUIandCLIColumns">
      <vectorQueryInsert>/PMUEventsGUIandCLIColumns</vectorQueryInsert>
    </vectorQuery>
    <vectorQuery id="UncoreGridRowBy">
      <queryRef>/UncorePackage</queryRef>
      <vectorQueryInsert>/PMUGridRowBy</vectorQueryInsert>
    </vectorQuery>
    <vectorQuery id="UncoreColumns">
      <vectorQueryInsert>/UncoreDataColumns</vectorQueryInsert>
      <vectorQueryInsert>/PMUEventsGUIandCLIColumns</vectorQueryInsert>
    </vectorQuery>
    <vectorQuery id="MySorting">
      <queryRef>/DataOfInterest</queryRef>
    </vectorQuery>
    <countQuery id="DataOfInterest">
      <queryInherit>/Clockticks</queryInherit>
    </countQuery>
    <vectorQuery id="DOIMetrics">
      <queryRef>/RefTime</queryRef>
      <queryRef>/DerivedClockticks</queryRef>
      <queryRef>/DerivedInstructionsRetired</queryRef>
      <vectorQueryInsert>/WaitAndContextSwitchDataMetrics</vectorQueryInsert>
    </vectorQuery>
    <vectorQuery id="MySrcAsmColumns">
      <vectorQueryInsert>/PMUEventsDataColumns</vectorQueryInsert>
      <vectorQueryInsert>/PMUSamplesDataColumns</vectorQueryInsert>
    </vectorQuery>
    <vectorQuery id="MySrcColumns">
      <vectorQueryInsert>/MySrcAsmColumns</vectorQueryInsert>
    </vectorQuery>
    <vectorQuery id="MyAsmColumns">
      <vectorQueryInsert>/MySrcAsmColumns</vectorQueryInsert>
    </vectorQuery>
  </queryLibrary>
</bag>
