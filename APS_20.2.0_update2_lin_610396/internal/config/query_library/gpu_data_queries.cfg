<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:byte="http://www.w3.org/2001/XMLSchema#byte"
  xmlns:short="http://www.w3.org/2001/XMLSchema#short"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  xmlns:long="http://www.w3.org/2001/XMLSchema#long"
  xmlns:unsignedByte="http://www.w3.org/2001/XMLSchema#unsignedByte"
  xmlns:unsignedShort="http://www.w3.org/2001/XMLSchema#unsignedShort"
  xmlns:unsignedInt="http://www.w3.org/2001/XMLSchema#unsignedInt"
  xmlns:unsignedLong="http://www.w3.org/2001/XMLSchema#unsignedLong"
  xmlns:float="http://www.w3.org/2001/XMLSchema#float"
  xmlns:double="http://www.w3.org/2001/XMLSchema#double"
  xmlns:null="http://www.intel.com/2009/BagSchema#null"
  xmlns:blob="http://www.intel.com/2009/BagSchema#blob"
  >
  <internal>
    <int:schemaVersion>1</int:schemaVersion>
    <int:contentVersion>1</int:contentVersion>
  </internal>
  <queryLibrary xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="" xmlns:str="http://exslt.org/strings" str:keep_str_namespace="">
    <infoQuery id="GPUNode" displayName="%GPUNode">
      <dbPath>dd_band::dd_gpu_node</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <displayAttributes>
        <boolean:hideZeroDataOnExpansion>true</boolean:hideZeroDataOnExpansion>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="GPUNodeAggregateMax" displayName="%GPUNode">
      <queryInherit>/GPUNode</queryInherit>
      <displayAttributes>
        <aggregation>AggregateMax</aggregation>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="GPUThread" displayName="%Thread">
      <dbPath>dma_packet_data::dd_dma_packet.thread</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUProcess" displayName="%Process">
      <dbPath>dma_packet_data::dd_dma_packet.thread.process</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUProcessID" displayName="%ProcessID">
      <dbPath>dma_packet_data::dd_dma_packet.thread.process</dbPath>
      <displayDbPathSuffix>pid</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUThreadID" displayName="%ThreadID">
      <dbPath>dma_packet_data::dd_dma_packet.thread</dbPath>
      <displayDbPathSuffix>thread_id</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUPCIID" displayName="%GPUPCIID">
      <dbPath>dd_band::dd_gpu_node.adapter</dbPath>
      <displayDbPathSuffix>device_id</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUQueueThread" displayName="%Thread">
      <dbPath>dma_queue_data::dd_dma_packet.thread</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUQueueProcess" displayName="%Process">
      <dbPath>dma_queue_data::dd_dma_packet.thread.process</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUQueueThreadID" displayName="%ThreadID">
      <dbPath>dma_queue_data::dd_dma_packet.thread</dbPath>
      <displayDbPathSuffix>thread_id</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUDMAPacket" displayName="%GPUUsageOverTime">
      <dbPath>dma_packet_data::dd_dma_packet</dbPath>
      <displayDbPathSuffix>perf_tag.tag_type.name</displayDbPathSuffix>
      <displayAttributes>
        <timelineGraphColor>179,213,106</timelineGraphColor>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="GPUDMAPacketByProcess" displayName="%GPUUsageOverTime">
      <dbPath>dma_packet_data::dd_dma_packet</dbPath>
      <displayDbPathSuffix>thread.process.name</displayDbPathSuffix>
      <displayAttributes>
        <timelineGraphColor>179,213,106</timelineGraphColor>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="QueueDMAPacket" displayName="%GPUSoftQueue">
      <dbPath>dma_queue_data::dd_dma_packet</dbPath>
      <displayDbPathSuffix>perf_tag.tag_type.name</displayDbPathSuffix>
      <displayAttributes>
        <timelineGraphColor>179,213,106</timelineGraphColor>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="QueueDMAPacketByProcess" displayName="%GPUSoftQueue">
      <dbPath>dma_queue_data::dd_dma_packet</dbPath>
      <displayDbPathSuffix>thread.process.name</displayDbPathSuffix>
      <displayAttributes>
        <timelineGraphColor>179,213,106</timelineGraphColor>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="GPUDMAPacketSubmissionId" displayName="%GPUDMAPacketSubmissionId">
      <dbPath>dma_packet_data::dd_dma_packet.submission_id</dbPath>
      <aliasForUnknown>%AliasUnknownPacketType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUQueuePacketSubmissionId" displayName="%GPUDMAPacketSubmissionId">
      <dbPath>dma_queue_data::dd_dma_packet.submission_id</dbPath>
    </infoQuery>
    <infoQuery id="GPUDMAPacketPresent" displayName="%GPUPacketPresent">
      <dbPath>dma_packet_data::dd_dma_packet.present</dbPath>
    </infoQuery>
    <infoQuery id="GPUQueuePacketPresent" displayName="%GPUPacketPresent">
      <dbPath>dma_queue_data::dd_dma_packet.present</dbPath>
    </infoQuery>
    <infoQuery id="GPUDMAPacketPerfTag" displayName="%GPUDMAPacketPerfTag">
      <dbPath>dma_packet_data::dd_dma_packet.perf_tag</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUDMAPacketPerfTagType" displayName="%GPUDMAPacketPerfTagType">
      <dbPath>dma_packet_data::dd_dma_packet.perf_tag.tag_type</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownPacketType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUQueuePacketPerfTag" displayName="%GPUDMAPacketPerfTag">
      <dbPath>dma_queue_data::dd_dma_packet.perf_tag</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUQueuePacketPerfTagType" displayName="%GPUDMAPacketPerfTagType">
      <dbPath>dma_queue_data::dd_dma_packet.perf_tag.tag_type</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUDMAPacketPerfTagTypeForDuration" displayName="%GPUDMAPacketPerfTagType">
      <dbPath>dma_packet_data::dd_dma_packet.bin.perf_tag.tag_type</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUDMAPacketPerfTagForDuration" displayName="%GPUDMAPacketPerfTagType">
      <dbPath>dma_packet_data::dd_dma_packet.bin.perf_tag</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <displayEval>
        <![CDATA[ (query("/GPUDMAPacketPerfTagForDuration")) ?
        (query("/GPUDMAPacketPerfTagForDuration") + " (" + query("/GPUDMAPacketPerfTagTypeForDuration") + ")")
        : query("/GPUDMAPacketPerfTagTypeForDuration") ]]>
      </displayEval>
    </infoQuery>
    <infoQuery id="GPUDMAPacketDuration" displayName="%GPUDMAPacketDuration">
      <dbPath>dma_packet_data::dd_dma_packet.bin</dbPath>
      <displayDbPathSuffix>duration</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownFrameType</aliasForUnknown>
    </infoQuery>
    <derivedQuery id="GPUDataCount" displayName="%GPUDataInstanceCount">
      <xsl:choose>
      <xsl:when test="exsl:IsNonEmptyTableExist('dma_packet_data')">
        <queryInherit>/GPUDMAPacketCountDerived</queryInherit>
      </xsl:when>
      <xsl:otherwise>
        <queryInherit>/GPUComputeTaskCountDerived</queryInherit>
      </xsl:otherwise>
      </xsl:choose>
    </derivedQuery>
    <derivedQuery id="GPUDMAPacketCountDerived" displayName="%GPUDMAPacketCount">
      <valueEval><![CDATA[ query("/GPUDMAPacketCount") ]]></valueEval>
    </derivedQuery>
    <instanceCountQuery id="GPUDMAPacketCount" displayName="%GPUDMAPacketCount">
      <instanceDbTable>dma_packet_data</instanceDbTable>
      <instanceBandTable>dma_packet_duration</instanceBandTable>
    </instanceCountQuery>
    <instanceCountQuery id="GPUDMAPacketCountNode" displayName="%GPUDMAPacketCount">
      <instanceDbTable>dma_packet_data</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
    </instanceCountQuery>
    <derivedQuery id="GPUDMAPacketInstanceCountDerived" displayName="%GPUDMAPacketInstanceCount">
      <valueEval><![CDATA[ query("/GPUDMAPacketInstanceCount") ]]></valueEval>
    </derivedQuery>
    <instanceCountQuery id="GPUDMAPacketInstanceCount" displayName="%GPUDMAPacketInstanceCount">
      <instanceDbTable>dma_packet_data::dd_dma_packet</instanceDbTable>
      <instanceBandTable>dma_packet_duration</instanceBandTable>
    </instanceCountQuery>
    <timeQuery id="GPUDXTime" displayName="%GPUDXTimeShort">
      <instanceDbTable>dma_packet_data::dd_dma_packet</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>timeAndBar</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
      </displayAttributes>
    </timeQuery>
    <timeQuery id="GPUQueueTime" displayName="%GPUSoftQueueTime">
      <instanceDbTable>dma_queue_data::dd_dma_packet</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
    </timeQuery>
    <instanceCountQuery id="GPUUsageForGridRow" displayName="%GPUDXTime">
      <instanceDbTable>dma_packet_data::dd_dma_packet</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <expand>
        <queryRef>/GPUNode</queryRef>
      </expand>
      <displayAttributes>
        <boolean:allowCollapse>false</boolean:allowCollapse>
      </displayAttributes>
    </instanceCountQuery>
    <instanceCountQuery id="GPUUsageAggregated" displayName="%GPUDXTime">
      <queryInherit>/GPUUsageForGridRow</queryInherit>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <maxEval>$logicalGPUCount</maxEval>
    </instanceCountQuery>
    <instanceCountQuery id="GPUQueue" displayName="%GPUSoftQueue">
      <instanceDbTable>dma_queue_data::dd_dma_packet</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <expand>
        <queryRef>/GPUNode</queryRef>
      </expand>
      <displayAttributes>
        <boolean:allowCollapse>false</boolean:allowCollapse>
      </displayAttributes>
    </instanceCountQuery>
    <derivedQuery id="GPUTimeContext" displayName="%GPUDXTimeShort">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/GPUGpuTime") > 0 ? query("/GPUGpuTime") : 0 ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUGap" displayName="%GPUGap">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/GPUNodeElapsedTime") > 0 ? query("/GPUNodeElapsedTime") - query("/GPUDXTime") : $NULL ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUUtilization" displayName="%GPUUtilization">
      <helpKeyword>configs.gpuutilization_gpuusagedescription</helpKeyword>
      <valueType>ratio</valueType>
      <valueEval><![CDATA[ query("/GPUGpuTime") / queryAll("/GPUElapsedTime", true) ]]></valueEval>
      <xsl:choose>
        <xsl:when test="exsl:IsNonEmptyTableExist('dma_packet_data')">
          <issueEval><![CDATA[ ((query("/GPUNodeElapsedTime") > 0 ) && (query("/GPUNode") != "Blitter"))  * (query("/GPUUtilization") < 0.8) ]]></issueEval>
        </xsl:when>
        <xsl:otherwise>
          <issueEval><![CDATA[ (query("/GPUUtilization") < 0.8) ]]></issueEval>
        </xsl:otherwise>
      </xsl:choose>
      <issueText>%GPUUtilizationIssueText</issueText>
      <sortType>ascending</sortType>
      <description>%GPUUsageDescription</description>
    </derivedQuery>
    <derivedQuery id="GPUUtilizationMax" displayName="%GPUUtilization" displayNameOverride="%GPUUsage">
      <helpKeyword>configs.gpuutilization_gpuutilizationmaxdescription</helpKeyword>
      <queryInherit>/GPUUtilization</queryInherit>
      <expand>
        <queryRef>/GPUNodeAggregateMax</queryRef>
      </expand>
      <description>%GPUUtilizationMaxDescription</description>
    </derivedQuery>
    <infoQuery id="GPUComputeSubmitThread" displayName="%Thread">
      <dbPath>gpu_compute_task_data::dd_compute_task.submit_thread</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeSubmitProcess" displayName="%Process">
      <dbPath>gpu_compute_task_data::dd_compute_task.submit_thread.process</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeTask" displayName="%ComputingTask">
      <dbPath>gpu_compute_task_data::dd_compute_task</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>type.context.name</displayDbPathSuffix>
      <displayAttributes>
        <timelineGraphColor>255,113,113</timelineGraphColor>
        <timelineIconType>duration</timelineIconType>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="GPUComputeTaskType" displayName="%ComputingTask">
      <dbPath>gpu_compute_task_data::dd_compute_task.type</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>context.name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUComputeTaskTypeDT" displayName="%ComputingTask">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.compute_task.type</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>context.name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUComputeTaskTypeWithFPUIssues" displayName="%ComputingTask">
      <queryInherit>/GPUComputeTaskTypeDerived</queryInherit>
      <issues>
        <issue>
          <issueEval><![CDATA[ query("/GPUFPUIssue") ]]></issueEval>
          <issueText>%FPUIssueText</issueText>
        </issue>
      </issues>
    </infoQuery>
    <infoQuery id="GPUComputeTaskTypeGTPinData" displayName="%ComputingTask">
      <dbPath>gpu_gtpin_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>context.name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUComputeTaskTypeGSim" displayName="%ComputingTask">
      <dbPath>gpu_gsim_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>context.name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUComputeTaskTypeGSimStalls" displayName="%ComputingTask">
      <dbPath>gsim_stall_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>context.name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <vectorQuery id="GPUComputeTaskTypeVector" displayName="%ComputingTask">
        <queryRef>/GPUComputeTaskTypeDerived</queryRef>
        <queryRef>/GPUComputeTaskTypeGTPinData</queryRef>
        <queryRef>/FPGAComputeTaskType</queryRef>
        <queryRef>/GPUComputeTaskTypeGSimStalls</queryRef>
        <queryRef>/GPUComputeTaskTypeGSim</queryRef>
        <queryRef>/FPGADeviceComputeTaskType</queryRef>
    </vectorQuery>
    <vectorQuery id="GSIMGenericFunction" displayName="%Function">
      <queryRef>/GSIMFunction</queryRef>
      <queryRef>/GPUFunction</queryRef>
      <queryRef>/GSIMCounterFunction</queryRef>
    </vectorQuery>
    <vectorQuery id="GSIMGenericSourceFunction" displayName="%SourceFunction">
      <queryRef>/GSIMSourceFunction</queryRef>
      <queryRef>/GPUSourceFunction</queryRef>
      <queryRef>/GSIMCounterSourceFunction</queryRef>
    </vectorQuery>
    <vectorQuery id="GSIMGenericParentCallstack" displayName="%ParentCallStack">
      <queryRef>/GPUParentCallStack</queryRef>
      <queryRef>/GSIMParentCallStack</queryRef>
      <queryRef>/GSIMCounterParentCallStack</queryRef>
    </vectorQuery>
    <infoQuery id="GPUComputeTaskTypeWithIssues" displayName="%ComputingTask">
      <queryInherit>/GPUComputeTaskTypeDerived</queryInherit>
      <issues>
        <issue>
          <issueEval><![CDATA[ (query("/GPUEUStalled") > 0.2) * (query("/GPUComputeTaskTime") > 0) ]]></issueEval>
          <issueText>%GPUEUStalledIssueText</issueText>
        </issue>
        <issue>
          <issueEval><![CDATA[ (query("/GPUEUIdle") > 0.05) * (query("/GPUComputeTaskTime") > 0) ]]></issueEval>
          <issueText>%GPUEUIdleIssueText</issueText>
        </issue>
        <issue>
          <issueEval><![CDATA[ ((query("/GPUSamplerBusy") > 0.98) * (query("/GPUComputeTaskTime") > 0)) || ((query("/GPUSamplerBottleneck") > 0.01) * (query("/GPUComputeTaskTime") > 0)) ]]></issueEval>
          <issueText>%GPUSamplerBusyIssueText</issueText>
        </issue>
        <issue>
          <issueEval><![CDATA[ ( (query("/GPUCSThreadIssuedCount") / (query("/GPUComputeTaskTime") ) ) > 20000000 ) * (query("/GPUEUStalled") > 0.1) ]]></issueEval>
          <issueText>%GPUCSThreadIssuedIssueText</issueText>
        </issue>
      </issues>
    </infoQuery>
    <infoQuery id="GPUComputeTaskTypeWithOccupancyIssues" displayName="%ComputingTask">
      <queryInherit>/GPUComputeTaskTypeDerived</queryInherit>
      <issues>
        <issue>
          <issueEval><![CDATA[ query("/GPUThreadOccupancyWhenBusyIssue") && query("/OccupancyLowIssue")  ]]></issueEval>
          <issueText>%GPULowOccupancyIssue</issueText>
        </issue>
        <issue>
          <issueEval><![CDATA[ query("/GPUThreadOccupancyWhenBusyIssue") && query("/OccupancyHighIssue") ]]></issueEval>
          <issueText>%GPUHighOccupancyIssue</issueText>
        </issue>
        <issue>
          <issueEval><![CDATA[ query("/GPUThreadOccupancyWhenBusyIssue") &&  query("/OccupancyNoIssue") ]]></issueEval>
          <issueText>%GPUMiscIssue</issueText>
        </issue>
      </issues>
    </infoQuery>
    <infoQuery id="GPUComputeTaskInstance" displayName="%GpuComputeTaskInstance">
      <dbPath>gpu_compute_task_data</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
      <displayAttributes>
        <timelineGraphColor>255,113,113</timelineGraphColor>
        <timelineIconType>duration</timelineIconType>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="GPUSourceComputeTask" displayName="%GpuSourceComputeTask">
      <dbPath>gpu_compute_task_data::dd_compute_task.type.context</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUSourceComputeTaskDT" displayName="%GpuSourceComputeTask">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.compute_task.type.context</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUSourceComputeTaskGSim" displayName="%ComputingTask">
      <dbPath>gpu_gsim_data::dd_compute_task.type.context</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUSourceComputeTaskGSimStalls" displayName="%ComputingTask">
      <dbPath>gsim_stall_data::dd_compute_task.type.context</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="GPUComputeTaskTypeDerived" displayName="%ComputingTask">
      <xsl:choose>
        <xsl:when test="exsl:is_experimental('gpu-data-transfer')">
          <queryInherit>/GPUComputeTaskTypeDT</queryInherit>
        </xsl:when>
        <xsl:otherwise>
          <queryInherit>/GPUComputeTaskType</queryInherit>
        </xsl:otherwise>
      </xsl:choose>
    </infoQuery>
    <infoQuery id="GPUSourceComputeTaskNew" displayName="%GpuSourceComputeTaskNew">
      <xsl:choose>
        <xsl:when test="exsl:is_experimental('gpu-data-transfer')">
          <queryInherit>/GPUSourceComputeTaskDT</queryInherit>
        </xsl:when>
        <xsl:otherwise>
          <queryInherit>/GPUSourceComputeTask</queryInherit>
        </xsl:otherwise>
      </xsl:choose>
    </infoQuery>
    <infoQuery id="GPUSourceComputeTaskGTPinData" displayName="%GpuSourceComputeTask">
      <dbPath>gpu_gtpin_data::dd_compute_task.type.context</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <vectorQuery id="GPUSourceComputeTaskVector" displayName="%GpuSourceComputeTask">
        <queryRef>/GPUSourceComputeTask</queryRef>
        <queryRef>/GPUSourceComputeTaskGTPinData</queryRef>
        <queryRef>/GPUSourceComputeTaskGSim</queryRef>
        <queryRef>/GPUSourceComputeTaskGSimStalls</queryRef>
    </vectorQuery>
    <vectorQuery id="GPUSourceComputeTaskGTPinDataNew" displayName="%GpuSourceComputeTaskNew">
        <queryRef>/GPUSourceComputeTask</queryRef>
        <queryRef>/GPUSourceComputeTaskGTPinData</queryRef>
    </vectorQuery>
    <infoQuery id="ComputingTaskDurationType" displayName="%ComputingTaskDurationType">
      <aliasForUnknown>Medium</aliasForUnknown>
    </infoQuery>
    <timeQuery id="GPUComputeTaskTime" displayName="%GpuComputingTaskTimeTotal">
      <instanceDbTable>gpu_compute_task_data</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>timeAndBar</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
      </displayAttributes>
    </timeQuery>
    <timeQuery id="GPUComputeTaskTimeDT" displayName="%GpuComputingTaskTimeTotal">
      <instanceDbTable>gpu_host_compute_transfer_data</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>timeAndBar</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
      </displayAttributes>
    </timeQuery>
    <timeQuery id="GPUComputeTaskTimeGPUName" displayName="%GpuComputingTaskTimeFull">
      <queryInherit>/GPUComputeTaskTime</queryInherit>
    </timeQuery>
    <derivedQuery id="GPUComputeTaskTimeDerived" displayName="%GpuComputingTaskTimeTotal">
      <helpKeyword>configs.gpucomputingtasktimetotal_tasktimedescription</helpKeyword>
      <description>%TaskTimeDescription</description>
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/GPUComputeTaskTime") ]]></valueEval>
    </derivedQuery>
    <infoQuery id="GPUDataTransferType" displayName="%GPUDataTransferType">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.data_transfer.type</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="GPUDataTransferTimeOutDerived" displayName="%GPUDataTransferTimeOut">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/GPUComputeTaskTimeDT/GPUDataTransferType[out]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUDataTransferTimeInDerived" displayName="%GPUDataTransferTimeIn">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/GPUComputeTaskTimeDT/GPUDataTransferType[in]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUDataTransferTimeTotalDerived" displayName="%GPUDataTransferTimeTotal">
      <valueType>time</valueType>
      <valueEval><![CDATA[ (query("/GPUDataTransferTimeOutDerived") + query("/GPUDataTransferTimeInDerived")) ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUEffectiveTimeDerived" displayName="%GPUEffectiveTime">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/GPUComputeTaskTimeDT/GPUDataTransferType[compute]") ]]></valueEval>
    </derivedQuery>
    <countQuery id="GPUComputeMemoryTransferSize" displayName="%DataTransferred">
      <instanceDbTable>gpu_compute_task_data</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>memoryAndBar</selfFormat>
        <totalFormat>memoryAndBar</totalFormat>
      </displayAttributes>
    </countQuery>
    <countQuery id="GPUComputeMemoryTransferSizeDT" displayName="%DataTransferred">
      <instanceDbTable>gpu_host_compute_transfer_data</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>memoryAndBar</selfFormat>
        <totalFormat>memoryAndBar</totalFormat>
      </displayAttributes>
    </countQuery>
    <derivedQuery id="GPUComputeMemoryTransferSizeOutDerived" displayName="%GPUComputeMemoryTransferSizeOut">
      <valueType>memory</valueType>
      <valueEval><![CDATA[ query("/GPUComputeMemoryTransferSizeDT/GPUDataTransferType[out]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUComputeMemoryTransferSizeInDerived" displayName="%GPUComputeMemoryTransferSizeIn">
      <valueType>memory</valueType>
      <valueEval><![CDATA[ query("/GPUComputeMemoryTransferSizeDT/GPUDataTransferType[in]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUComputeMemoryTransferSizeTotalDerived" displayName="%GPUComputeMemoryTransferSizeTotal">
      <valueType>memory</valueType>
      <valueEval><![CDATA[ (query("/GPUComputeMemoryTransferSizeInDerived") + query("/GPUComputeMemoryTransferSizeOutDerived")) ]]></valueEval>
    </derivedQuery>
    <infoQuery id="GPUComputeBufferId" displayName="%GPUComputeBufferId">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer</dbPath>
      <displayDbPathSuffix>buffer</displayDbPathSuffix>
    </infoQuery>
    <instanceCountQuery id="GPUComputeTaskCount" displayName="%GpuComputeTaskCount">
      <instanceDbTable>gpu_compute_task_data</instanceDbTable>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
    </instanceCountQuery>
    <derivedQuery id="GPUComputeTaskCountDerived" displayName="%GpuComputeTaskCount">
      <helpKeyword>configs.gpucomputetaskcount_taskinstancecountdescription</helpKeyword>
      <description>%TaskInstanceCountDescription</description>
      <valueEval><![CDATA[ query("/GPUComputeTaskCount") ]]></valueEval>
      <valueType>count</valueType>
    </derivedQuery>
    <derivedQuery id="GPUComputeTaskDuration" displayName="%GpuComputeTaskDuration">
      <helpKeyword>configs.gpucomputetaskduration_taskavgtimedescription</helpKeyword>
      <description>%TaskAvgTimeDescription</description>
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/GPUComputeTaskTime") / query("/GPUComputeTaskCount") ]]></valueEval>
      <boolean:valueSummable>false</boolean:valueSummable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>time</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
        <boolean:vtNullAsZero>false</boolean:vtNullAsZero>
      </displayAttributes>
    </derivedQuery>
    <infoQuery id="GPUComputeGlobalDim" displayName="%ComputingGlobalSize">
      <dbPath>gpu_compute_task_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>global_dim_str</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeGlobalDimDT" displayName="%ComputingGlobalSize">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.compute_task.type</dbPath>
      <displayDbPathSuffix>global_dim_str</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeGlobalSize" displayName="%ComputingGlobalSize">
      <dbPath>gpu_compute_task_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>global_size</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeGlobalSizeDT" displayName="%ComputingGlobalSize">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.compute_task.type</dbPath>
      <displayDbPathSuffix>global_size</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="GPUComputeGlobalDimDerived" displayName="%ComputingGlobalSizeShort">
      <helpKeyword>configs.computingglobalsizeshort_computingglobalsizedescription</helpKeyword>
      <xsl:choose>
        <xsl:when test="exsl:is_experimental('gpu-data-transfer')">
          <valueEval><![CDATA[ query("/GPUComputeGlobalDimDT") ]]></valueEval>
        </xsl:when>
        <xsl:otherwise>
          <valueEval><![CDATA[ query("/GPUComputeGlobalDim") ]]></valueEval>
        </xsl:otherwise>
      </xsl:choose>
      <description>%ComputingGlobalSizeDescription</description>
      <valueType>string</valueType>
    </derivedQuery>
    <infoQuery id="GPUComputeLocalDim" displayName="%ComputingLocalSize">
      <dbPath>gpu_compute_task_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>local_dim_str</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeLocalDimDT" displayName="%ComputingLocalSize">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.compute_task.type</dbPath>
      <displayDbPathSuffix>local_dim_str</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="GPUComputeLocalDimDerived" displayName="%ComputingLocalSizeShort">
      <helpKeyword>configs.computinglocalsizeshort_computinglocalsizedescription</helpKeyword>
      <xsl:choose>
        <xsl:when test="exsl:is_experimental('gpu-data-transfer')">
          <valueEval><![CDATA[ query("/GPUComputeLocalDimDT") ]]></valueEval>
        </xsl:when>
        <xsl:otherwise>
          <valueEval><![CDATA[ query("/GPUComputeLocalDim") ]]></valueEval>
        </xsl:otherwise>
      </xsl:choose>
      <description>%ComputingLocalSizeDescription</description>
      <valueType>string</valueType>
    </derivedQuery>
    <infoQuery id="GPUComputeSVMUsageType" displayName="%ComputeSVMUsageType">
      <dbPath>gpu_compute_task_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>svm_usage_type.name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeSVMUsageTypeDT" displayName="%ComputeSVMUsageType">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.compute_task.type</dbPath>
      <displayDbPathSuffix>svm_usage_type.name</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="GPUComputeSVMUsageTypeDerived" displayName="%ComputeSVMUsageType">
      <xsl:choose>
        <xsl:when test="exsl:is_experimental('gpu-data-transfer')">
          <valueEval><![CDATA[ query("/GPUComputeSVMUsageTypeDT") ]]></valueEval>
        </xsl:when>
        <xsl:otherwise>
          <valueEval><![CDATA[ query("/GPUComputeSVMUsageType") ]]></valueEval>
        </xsl:otherwise>
      </xsl:choose>
      <valueType>string</valueType>
    </derivedQuery>
    <infoQuery id="GPUComputeSimdWidth" displayName="%ComputingSimdWidth">
      <dbPath>gpu_compute_task_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>simd_width</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeSimdWidthDT" displayName="%ComputingSimdWidth">
      <dbPath>gpu_host_compute_transfer_data::dd_compute_and_transfer.compute_task.type</dbPath>
      <displayDbPathSuffix>simd_width</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="GPUComputeSimdWidthDerived" displayName="%ComputingSimdWidthShort">
      <helpKeyword>configs.computingsimdwidthshort_computingsimdwidthdescription</helpKeyword>
      <xsl:choose>
        <xsl:when test="exsl:is_experimental('gpu-data-transfer')">
          <valueEval><![CDATA[ query("/GPUComputeSimdWidthDT") ]]></valueEval>
        </xsl:when>
        <xsl:otherwise>
          <valueEval><![CDATA[ query("/GPUComputeSimdWidth") ]]></valueEval>
        </xsl:otherwise>
      </xsl:choose>
      <description>%ComputingSimdWidthDescription</description>
      <valueType>count</valueType>
    </derivedQuery>
    <infoQuery id="GPUComputeGlobalDimQueue" displayName="%ComputingGlobalSize">
      <dbPath>compute_task_queue_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>global_dim_str</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeLocalDimQueue" displayName="%ComputingLocalSize">
      <dbPath>compute_task_queue_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>local_dim_str</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeSimdWidthQueue" displayName="%ComputingSimdWidth">
      <dbPath>compute_task_queue_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>count</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="GPUAdapterName" displayName="%Name">
      <valueEval>$gpuAdapterName</valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <derivedQuery id="GPUAdapterVendor" displayName="%GPUVendor">
      <valueEval>$gpuAdapterVendor</valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <derivedQuery id="GPUAdapterDriver" displayName="%GPUDriver">
      <valueEval>$gpuAdapterDriver</valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <derivedQuery id="GPUEUCount" displayName="%GPUEUCount">
      <valueEval>$gpuEuCount</valueEval>
      <valueType>int</valueType>
    </derivedQuery>
    <derivedQuery id="GPUMaxEUThreadCount" displayName="%GPUMaxEUThreadCount">
      <valueEval>$gpuMaxEuThreadCount</valueEval>
      <valueType>int</valueType>
    </derivedQuery>
    <derivedQuery id="GPUMaxCoreFreq" displayName="%GPUMaxCoreFreq">
      <valueEval>$gpuAdapterMaxCoreFreq</valueEval>
      <valueType>frequency</valueType>
    </derivedQuery>
    <derivedQuery id="GPUGPASupport" displayName="%GPUGPASupport">
      <valueEval>$gpuAdapterIGPA ? "enabled" : "disabled"</valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <derivedQuery id="GPUEdramSize" displayName="%GPUEdramSize">
      <valueEval>$gpuEdramSize</valueEval>
      <valueType>memory</valueType>
    </derivedQuery>
    <xsl:variable name="GPUCountersCollected" select="string($gpuCounters) != 'off'"/>
    <vectorQuery id="GPUAdapterInfo">
      <queryRef>/GPUAdapterName</queryRef>
      <queryRef>/GPUAdapterVendor</queryRef>
      <xsl:if test="exsl:ctx('targetOS')='Windows'">
        <queryRef>/GPUAdapterDriver</queryRef>
      </xsl:if>
      <xsl:if test="$GPUCountersCollected">
        <queryRef>/GPUEUCount</queryRef>
        <queryRef>/GPUMaxEUThreadCount</queryRef>
        <queryRef>/GPUMaxCoreFreq</queryRef>
        <xsl:if test="exsl:ctx('gpuPlatformIndex', 1)=4 or exsl:ctx('gpuPlatformIndex', 1)=8">
          <queryRef>/GPUGPASupport</queryRef>
        </xsl:if>
        <xsl:if test="exsl:ctx('gpuEdramSize', 0)!=0">
          <queryRef>/GPUEdramSize</queryRef>
        </xsl:if>
      </xsl:if>
    </vectorQuery>
    <derivedQuery id="GPUOpenCLVersion" displayName="%GPUOpenCLVersion">
      <valueEval>$gpuOpenClOpenClCVersion</valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <derivedQuery id="GPUOpenCLMaxComputeUnits" displayName="%GPUOpenCLMaxComputeUnits">
      <valueEval>$gpuOpenClMaxComputeUnits</valueEval>
      <valueType>int</valueType>
    </derivedQuery>
    <derivedQuery id="GPUOpenCLMaxWorkGroupSize" displayName="%GPUOpenCLMaxWorkgroupSize">
      <valueEval>$gpuOpenClMaxWorkGroupSize</valueEval>
      <valueType>int</valueType>
    </derivedQuery>
    <derivedQuery id="GPUOpenCLLocalMemSize" displayName="%GPUOpenCLLocalMemSize">
      <valueEval>$gpuOpenClLocalMemSize</valueEval>
      <valueType>memory</valueType>
    </derivedQuery>
    <derivedQuery id="GPUOpenClSVMCapabilities" displayName="%GPUOpenClSVMCapabilities">
      <valueEval>$gpuOpenClSVMCapabilities</valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <vectorQuery id="GPUOpenCLInfo">
      <queryRef>/GPUOpenCLVersion</queryRef>
      <queryRef>/GPUOpenCLMaxComputeUnits</queryRef>
      <queryRef>/GPUOpenCLMaxWorkGroupSize</queryRef>
      <queryRef>/GPUOpenCLLocalMemSize</queryRef>
      <queryRef>/GPUOpenClSVMCapabilities</queryRef>
    </vectorQuery>
    <infoQuery id="GPUComputeTaskQueueName" displayName="%ComputingQueue">
      <dbPath>gpu_compute_task_data::dd_compute_task.queue</dbPath>
      <displayDbPathSuffix>device.name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="ComputeQueueQueueName" displayName="%ComputingQueue">
      <dbPath>compute_task_queue_data::dd_compute_task.queue</dbPath>
      <displayDbPathSuffix>device.name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="ComputeQueueType" displayName="%ComputingQueue">
      <dbPath>compute_task_queue_data::dd_compute_task.type</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>context.name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="ComputeQueue" displayName="%ComputingQueue">
      <dbPath>compute_task_queue_data::dd_compute_task</dbPath>
      <instanceBandTable>dd_gpu_node</instanceBandTable>
      <displayDbPathSuffix>type.context.name</displayDbPathSuffix>
      <displayAttributes>
        <timelineGraphColor>255,113,113</timelineGraphColor>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="ComputeQueueTaskName" displayName="%ComputingTask">
      <queryInherit>/ComputeQueue</queryInherit>
    </infoQuery>
    <infoQuery id="ComputeQueueTypeTaskName" displayName="%ComputingTask">
      <queryInherit>/ComputeQueueType</queryInherit>
    </infoQuery>
    <infoQuery id="ComputeQueueSubmitThread" displayName="%Thread">
      <dbPath>compute_task_queue_data::dd_compute_task.submit_thread</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <timeQuery id="ComputeQueueTime" displayName="%ComputingTaskQueueTime">
      <instanceDbTable>compute_task_queue_data</instanceDbTable>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
      <valueType>time</valueType>
    </timeQuery>
    <vectorQuery id="GPUComputeTaskPurposeVector" displayName="%ComputingTaskPurpose">
        <queryRef>/GPUComputeTaskPurpose</queryRef>
        <queryRef>/GPUComputeTaskPurposeGTPinData</queryRef>
        <queryRef>/FPGAComputeTaskPurpose</queryRef>
    </vectorQuery>
    <infoQuery id="GPUComputeTaskPurpose" displayName="%ComputingTaskPurpose">
      <dbPath>gpu_compute_task_data::dd_compute_task.type.purpose</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeTaskPurposeGTPinData" displayName="%ComputingTaskPurpose">
      <dbPath>gpu_gtpin_data::dd_compute_task.type.purpose</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="GPUComputeTaskPurposeShortName" displayName="%ComputingTaskPurposeShortName">
      <queryInherit>/GPUComputeTaskPurpose</queryInherit>
    </infoQuery>
    <infoQuery id="ComputeQueuePurpose" displayName="%ComputingTaskPurposeShortName">
      <dbPath>compute_task_queue_data::dd_compute_task.type.purpose</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="GPUComputeMemoryTransferSizeDerived" displayName="%ComputingTransferSizeShort">
      <helpKeyword>configs.computingtransfersizeshort_gpumemorytransfersizedescription</helpKeyword>
      <description>%GPUMemoryTransferSizeDescription</description>
      <valueType>memory</valueType>
      <xsl:choose>
        <xsl:when test="exsl:is_experimental('gpu-data-transfer')">
          <valueEval><![CDATA[ query("/GPUComputeMemoryTransferSizeDT") ]]></valueEval>
        </xsl:when>
        <xsl:otherwise>
          <valueEval><![CDATA[ query("/GPUComputeMemoryTransferSize") ]]></valueEval>
        </xsl:otherwise>
      </xsl:choose>
      <displayAttributes>
        <boolean:vtNullAsZero>false</boolean:vtNullAsZero>
      </displayAttributes>
    </derivedQuery>
    <derivedQuery id="GPUComputeMemoryTransferBandwidth" displayName="%BandwidthGBperSec">
      <helpKeyword>configs.bandwidthgbpersec_gpumemorytransferbandwidthdescription</helpKeyword>
      <description>%GPUMemoryTransferBandwidthDescription</description>
      <valueType>double</valueType>
      <valueEval><![CDATA[ query("/GPUComputeMemoryTransferSize") / (query("/GPUElapsedTime") * 1000000000) ]]></valueEval>
      <displayAttributes>
        <boolean:vtNullAsZero>false</boolean:vtNullAsZero>
      </displayAttributes>
    </derivedQuery>
    <timeQuery id="CPUGPUUsageElapsedTime" displayName="%CPUGPUUsageElapsedTime">
      <boolean:useGlobalGrouper>true</boolean:useGlobalGrouper>
      <instanceDbTable>cpu_gpu_usage_data::dd_cpu_gpu_usage</instanceDbTable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>timeAndBar</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
      </displayAttributes>
    </timeQuery>
    <infoQuery id="CPUGPUUsageUtilization" displayName="%CPUGPUUsageUtilization">
      <dbPath>cpu_gpu_usage_data::dd_cpu_gpu_usage.utilization</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="CPUGPUBothActive" displayName="%CPUGPUBothActive">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%CPUandGPU]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="CPUOnlyActive" displayName="%CPUOnlyActive">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%CPUOnly]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUOnlyActive" displayName="%GPUOnlyActive">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%GPUOnly]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="CPUGPUBothIdle" displayName="%CPUGPUBothIdle">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%Idle]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="CPUActiveTime" displayName="%CPUActiveTime">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%CPUandGPU]") + query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%CPUOnly]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="GPUActiveTime" displayName="%GPUActiveTime">
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%CPUandGPU]") + query("/CPUGPUUsageElapsedTime/CPUGPUUsageUtilization[%GPUOnly]") ]]></valueEval>
    </derivedQuery>
    <infoQuery id="CPUGPUConcurrency" displayName="%CPUGPUConcurrency">
      <dbPath>cpu_gpu_usage_data::dd_cpu_gpu_usage.utilization</dbPath>
      <displayDbPathSuffix>min_value</displayDbPathSuffix>
      <displayAttributes>
        <timelineFormat>line</timelineFormat>
        <timelineGraphColor>0,126,233</timelineGraphColor>
      </displayAttributes>
    </infoQuery>
    <vectorQuery id="GPUDMAPacketDetails">
      <queryRef>/GPUThread</queryRef>
      <queryRef>/GPUProcess</queryRef>
      <queryRef>/GPUDMAPacketSubmissionId</queryRef>
      <xsl:if test="not(contains(exsl:ctx('androidBoardPlatform', ''), 'sofia'))">
        <queryRef>/GPUDMAPacketPerfTagType</queryRef>
        <queryRef>/GPUDMAPacketPerfTag</queryRef>
      </xsl:if>
    </vectorQuery>
    <vectorQuery id="GPUQueuePacketDetails">
      <queryRef>/GPUQueueThread</queryRef>
      <queryRef>/GPUQueueProcess</queryRef>
      <queryRef>/GPUQueuePacketSubmissionId</queryRef>
      <xsl:if test="not(contains(exsl:ctx('androidBoardPlatform', ''), 'sofia'))">
        <queryRef>/GPUQueuePacketPerfTagType</queryRef>
        <queryRef>/GPUQueuePacketPerfTag</queryRef>
      </xsl:if>
    </vectorQuery>
      <infoQuery id="PacketStage" displayName="%PacketStage">
        <dbPath>packet_stage_data::dd_gpu_packet_stage</dbPath>
        <displayDbPathSuffix>value</displayDbPathSuffix>
      </infoQuery>
    <infoQuery id="PacketStageNew" displayName="%PacketStageNew">
      <queryInherit>/PacketStage</queryInherit>
    </infoQuery>
    <derivedQuery id="GpuCpuTime" displayName="%CPUTime">
      <helpKeyword>configs.cputime_cputimedescription</helpKeyword>
      <description>%CPUTimeDescription</description>
      <valueType>time</valueType>
      <xsl:choose>
        <xsl:when test="exsl:is_table_exist('cpu_data')">
          <valueEval><![CDATA[ query("/CPUTimeForGPUPacketStage") ]]></valueEval>
        </xsl:when>
        <xsl:otherwise>
          <valueEval><![CDATA[ query("/RefTimeForGPUPacketStage") ]]></valueEval>
        </xsl:otherwise>
      </xsl:choose>
    </derivedQuery>
    <infoQuery id="EngineStateExpansion">
      <xsl:choose>
        <xsl:when test="exsl:IsNonEmptyTableExist('packet_stage_data')">
          <queryInherit>/PacketStageNew</queryInherit>
        </xsl:when>
        <xsl:otherwise>
          <queryInherit>/ConditionalGPUBusyDataGrouping</queryInherit>
        </xsl:otherwise>
      </xsl:choose>
    </infoQuery>
    <derivedQuery id="CPUTimeByEngineState" displayName="%CPUTime">
      <valueEval><![CDATA[ query("/CPUTime") ]]></valueEval>
      <valueType>time</valueType>
      <displayAttributes>
        <boolean:expand>true</boolean:expand>
        <sortType>descending</sortType>
        <selfFormat>timeAndBar</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
      </displayAttributes>
      <expand>
        <queryRef>/EngineStateExpansion</queryRef>
      </expand>
    </derivedQuery>
    <timeQuery id="TaskTimeForEngineState" displayName="%TaskTime">
      <queryInherit>/TaskTime</queryInherit>
      <instanceBandTable>gpu_packet_stage_grouper</instanceBandTable>
    </timeQuery>
    <derivedQuery id="TaskTimeByEngineState" displayName="%TaskTime">
      <valueEval><![CDATA[ query("/TaskTimeForEngineState") ]]></valueEval>
      <valueType>time</valueType>
      <displayAttributes>
        <boolean:expand>true</boolean:expand>
        <sortType>descending</sortType>
        <selfFormat>timeAndBar</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
      </displayAttributes>
      <expand>
        <queryRef>/EngineStateExpansion</queryRef>
      </expand>
    </derivedQuery>
    <infoQuery id="FPGAComputeTaskInstance" displayName="%GpuComputeTaskInstance">
      <dbPath>accelerator_compute_task_data</dbPath>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
      <displayAttributes>
        <timelineGraphColor>255,113,113</timelineGraphColor>
        <timelineIconType>duration</timelineIconType>
      </displayAttributes>
    </infoQuery>
    <derivedQuery id="FPGAComputeTaskCountDerived" displayName="%GpuComputeTaskCount">
      <description>%TaskInstanceCountDescription</description>
      <valueEval><![CDATA[ query("/FPGAComputeTaskCount") ]]></valueEval>
      <valueType>count</valueType>
    </derivedQuery>
    <derivedQuery id="FPGAComputeTaskDuration" displayName="%GpuComputeTaskDuration">
      <helpKeyword>configs.gpucomputetaskduration_taskavgtimedescription</helpKeyword>
      <description>%TaskAvgTimeDescription</description>
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/FPGAComputeTaskTime") / query("/FPGAComputeTaskCount") ]]></valueEval>
      <boolean:valueSummable>false</boolean:valueSummable>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>time</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
      </displayAttributes>
    </derivedQuery>
    <infoQuery id="FPGAComputeGlobalDim" displayName="%ComputingGlobalSize">
      <dbPath>accelerator_compute_task_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>global_dim_str</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="FPGAComputeGlobalDimDerived" displayName="%ComputingGlobalSizeShort">
      <valueEval><![CDATA[ query("/FPGAComputeGlobalDim") ]]></valueEval>
      <description>%ComputingGlobalSizeDescription</description>
      <valueType>string</valueType>
    </derivedQuery>
    <infoQuery id="FPGAComputeLocalDim" displayName="%ComputingLocalSize">
      <dbPath>accelerator_compute_task_data::dd_compute_task.type</dbPath>
      <displayDbPathSuffix>local_dim_str</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="FPGAComputeLocalDimDerived" displayName="%ComputingLocalSizeShort">
      <valueEval><![CDATA[ query("/FPGAComputeLocalDim") ]]></valueEval>
      <description>%ComputingLocalSizeDescription</description>
      <valueType>string</valueType>
    </derivedQuery>
    <derivedQuery id="FPGAComputeTaskTimeDerived" displayName="%GpuComputingTaskTimeTotal">
      <description>%TaskTimeDescription</description>
      <valueType>time</valueType>
      <valueEval><![CDATA[ query("/FPGAComputeTaskTime") ]]></valueEval>
    </derivedQuery>
   <infoQuery id="FPGAComputeTaskPurpose" displayName="%ComputingTaskPurpose">
      <dbPath>accelerator_compute_task_data::dd_compute_task.type.purpose</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <countQuery id="FPGAComputeMemoryTransferSize" displayName="%DataTransferred">
      <instanceDbTable>accelerator_compute_task_data</instanceDbTable>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
      <valueType>memory</valueType>
    </countQuery>
    <derivedQuery id="FPGAComputeMemoryTransferSizeDerived" displayName="%ComputingTransferSizeShort">
      <description>%FPGAMemoryTransferSizeDescription</description>
      <valueType>memory</valueType>
      <valueEval><![CDATA[ query("/FPGAComputeMemoryTransferSize") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="FPGAComputeMemoryTransferBandwidth" displayName="%BandwidthGBperSec">
      <description>%FPGAMemoryTransferBandwidthDescription</description>
      <valueType>double</valueType>
      <valueEval><![CDATA[ query("/FPGAComputeMemoryTransferSize") / (query("/GlobalElapsedTime") * 1000000000) ]]></valueEval>
    </derivedQuery>
    <infoQuery id="FPGAComputeTask" displayName="%ComputingTask">
      <dbPath>accelerator_compute_task_data::dd_compute_task</dbPath>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
      <displayDbPathSuffix>type.context.name</displayDbPathSuffix>
      <displayAttributes>
        <timelineGraphColor>255,113,113</timelineGraphColor>
        <timelineIconType>duration</timelineIconType>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="FPGAComputeSubmitThread" displayName="%ComputingTask">
      <dbPath>accelerator_compute_task_data::dd_compute_task.submit_thread</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <timeQuery id="FPGAComputeTaskTime" displayName="%FPGAComputingTaskTime">
      <instanceDbTable>accelerator_compute_task_data</instanceDbTable>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
      <valueType>time</valueType>
    </timeQuery>
    <infoQuery id="FPGAComputeTaskType" displayName="%FPGAComputeTaskType">
      <dbPath>accelerator_compute_task_data::dd_compute_task.type</dbPath>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
      <displayDbPathSuffix>context.name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <instanceCountQuery id="FPGAComputeTaskCount" displayName="%FPGAComputeTaskCount">
      <description>%FPGAComputeTaskCountDescription</description>
      <instanceDbTable>accelerator_compute_task_data</instanceDbTable>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
    </instanceCountQuery>
    <infoQuery id="FPGAComputeTaskQueueName" displayName="%ComputingQueue">
      <dbPath>accelerator_compute_task_data::dd_compute_task.queue</dbPath>
      <displayDbPathSuffix>device.name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="FPGASourceComputeTask" displayName="%FPGASourceComputeTask">
      <dbPath>accelerator_compute_task_data::dd_compute_task.type.context</dbPath>
      <instanceBandTable>dd_compute_queue</instanceBandTable>
      <displayDbPathSuffix>name</displayDbPathSuffix>
      <aliasForUnknown>%AliasUnknownTaskType</aliasForUnknown>
    </infoQuery>
    <infoQuery id="QueueDepth" displayName="%DMAQueueDepth">
      <dbPath>dma_queue_depth_data::dd_dma_queue_properties</dbPath>
      <displayDbPathSuffix>depth</displayDbPathSuffix>
    </infoQuery>
    <timeQuery id="QueueDepthDuration" displayName="%ElapsedTime">
      <instanceDbTable>dma_queue_depth_data::dd_dma_queue_properties</instanceDbTable>
      <instanceBandTable>dd_dma_queue_properties</instanceBandTable>
      <valueType>double</valueType>
    </timeQuery>
    <derivedQuery id="QueueDepthAggregatedAvg" displayNameOverride="%WeightedAverage">
      <valueEval><![CDATA[ query("/QueueDepthDuration") ]]></valueEval>
      <valueType>double</valueType>
      <displayAttributes>
        <aggregation>AggregateWeightedAvg</aggregation>
      </displayAttributes>
      <expand>
        <queryRef>/QueueDepth</queryRef>
      </expand>
    </derivedQuery>
    <derivedQuery id="GPUDMAPacketInstanceAggregatedAvg" displayNameOverride="%WeightedAverage">
      <valueEval><![CDATA[ query("/GPUDMAPacketInstanceCountDerived") ]]></valueEval>
      <valueType>double</valueType>
      <displayAttributes>
        <aggregation>AggregateWeightedAvg</aggregation>
      </displayAttributes>
      <expand>
        <queryRef>/GPUDMAPacketDuration</queryRef>
      </expand>
    </derivedQuery>
  </queryLibrary>
</bag>
