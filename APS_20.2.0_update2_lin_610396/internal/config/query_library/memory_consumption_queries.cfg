<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:byte="http://www.w3.org/2001/XMLSchema#byte"
  xmlns:short="http://www.w3.org/2001/XMLSchema#short"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  xmlns:long="http://www.w3.org/2001/XMLSchema#long"
  xmlns:unsignedByte="http://www.w3.org/2001/XMLSchema#unsignedByte"
  xmlns:unsignedShort="http://www.w3.org/2001/XMLSchema#unsignedShort"
  xmlns:unsignedInt="http://www.w3.org/2001/XMLSchema#unsignedInt"
  xmlns:unsignedLong="http://www.w3.org/2001/XMLSchema#unsignedLong"
  xmlns:float="http://www.w3.org/2001/XMLSchema#float"
  xmlns:double="http://www..org/2001/XMLSchema#double"
  xmlns:null="http://www.intel.com/2009/BagSchema#null"
  xmlns:blob="http://www.intel.com/2009/BagSchema#blob"
  >
  <queryLibrary xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace="">
    <countQuery id="MemoryConsumptionOverTime" displayName="%MemoryConsumption">
      <instanceDbTable>memory_object_data::dd_memory_object</instanceDbTable>
      <displayAttributes>
        <timelineObjectType>interval</timelineObjectType>
        <selfFormat>memory</selfFormat>
        <timelineValueFormat>memory</timelineValueFormat>
      </displayAttributes>
      <valueType>memory</valueType>
    </countQuery>
    <instanceCountQuery id="AllocInstanceCount" displayName="%AllocCount">
      <instanceDbTable>memory_allocation_data::dd_memory_object</instanceDbTable>
      <valueType>count</valueType>
    </instanceCountQuery>
    <infoQuery id="AllocCountInfo" displayName="%AllocSize">
      <dbPath>memory_allocation_data::dd_memory_object.object_info</dbPath>
      <displayDbPathSuffix>size</displayDbPathSuffix>
      <valueType>memory</valueType>
      <displayAttributes>
        <selfFormat>memory</selfFormat>
        <totalFormat>memory</totalFormat>
      </displayAttributes>
    </infoQuery>
    <countQuery id="AllocCount" displayName="%AllocSize">
     <instanceDbTable>memory_allocation_data::dd_memory_object</instanceDbTable>
     <valueType>memory</valueType>
     <displayAttributes>
       <selfFormat>memory</selfFormat>
       <totalFormat>memory</totalFormat>
     </displayAttributes>
    </countQuery>
    <countQuery id="DeallocCount" displayName="%DeallocSize">
     <instanceDbTable>memory_deallocation_data::dd_memory_object</instanceDbTable>
     <valueType>memory</valueType>
     <displayAttributes>
       <selfFormat>memory</selfFormat>
       <totalFormat>memory</totalFormat>
     </displayAttributes>
    </countQuery>
    <derivedQuery id="AllocCountDelta" displayName="%AllocSizeDelta">
     <valueEval>query(&quot;/AllocCount&quot;) - query(&quot;/DeallocCount&quot;)</valueEval>
     <valueType>memory</valueType>
    </derivedQuery>
    <infoQuery id="AllocType" displayName="%MemoryObjectType">
      <dbPath>memory_allocation_data::dd_memory_object.object_info.type</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="MemoryAllocSourceLocationFileAndLine" displayName="%MemoryObjectAllocSourceFileLine">
      <valueEval><![CDATA[ query("/MemoryAllocSourceFile") + ":" + query("/MemoryAllocSourceLine") ]]></valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <infoQuery id="MemoryObject" displayName="%MemoryObject">
      <dbPath>memory_allocation_data::dd_memory_object.object_info</dbPath>
      <displayDbPathSuffix>alloc_cs.bottom_user_cs.code_loc.rva</displayDbPathSuffix>
      <displayEval><![CDATA[ ( query("/AllocType") == "stack" ) ? "[Stack]" : ( ( query("/MemoryAllocFunction") + (( query("/MemoryAllocSourceLine") > 0 ) ? (" - " + query("/MemoryAllocSourceLocationFileAndLine")) : "")) + ( ( query("/AllocCountInfo") > 0 ) ? (" ( " + m#query("/AllocCountInfo") + ")" ) : "" ) ) ]]></displayEval>
      <displayAttributes>
        <diveInitialSelection>disDiveObjectStart</diveInitialSelection>
      </displayAttributes>
    </infoQuery>
    <derivedQuery id="MemoryAllocContribution" displayName="%MemoryObjectContribution">
      <valueEval><![CDATA[ query("/AllocCount") ]]></valueEval>
      <valueType>memory</valueType>
    </derivedQuery>
  </queryLibrary>
</bag>
