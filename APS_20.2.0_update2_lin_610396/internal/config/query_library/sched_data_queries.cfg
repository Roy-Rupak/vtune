<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright Â© 2009-2020 Intel Corporation. All rights reserved.

 The information contained herein is the exclusive property of
 Intel Corporation and may not be disclosed, examined, or reproduced in
 whole or in part without explicit written authorization from the Company.

-->
<bag
  xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean"
  xmlns:int="http://www.w3.org/2001/XMLSchema#int"
  xmlns:double="http://www..org/2001/XMLSchema#double">
  <internal>
    <int:schemaVersion>1</int:schemaVersion>
    <int:contentVersion>1</int:contentVersion>
  </internal>
  <queryLibrary
    xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:exsl="http://exslt.org/common" exsl:keep_exsl_namespace=""
    xmlns:str="http://exslt.org/strings" str:keep_str_namespace=""
  >
    <timeQuery id="SchedTime" displayName="%SchedTime">
      <instanceDbTable>sched_data::dd_context_switch</instanceDbTable>
      <displayAttributes>
        <selfFormat>time</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
        <sortType>descending</sortType>
      </displayAttributes>
      <instanceBandTable>sched_and_counter_metrics</instanceBandTable>
    </timeQuery>
    <derivedQuery id="InactiveWaitTime" displayName="%InactiveWaitTime">
      <description>%InactiveWaitTimeDescription</description>
      <valueEval><![CDATA[ query("/SchedTime") ]]></valueEval>
      <valueType>time</valueType>
      <displayAttributes>
        <timelineFormat>area</timelineFormat>
        <timelineGraphColor>98,79,19</timelineGraphColor>
        <timeScalems>1000</timeScalems>
        <minimumResolutionms>0</minimumResolutionms>
        <boolean:expand>true</boolean:expand>
      </displayAttributes>
    </derivedQuery>
    <countQuery id="ContextSwitchCount" displayName="%ContextSwitchCount">
      <instanceDbTable>sched_data::dd_context_switch</instanceDbTable>
      <valueType>count</valueType>
      <displayAttributes>
        <selfFormat>count</selfFormat>
        <totalFormat>countAndBar</totalFormat>
        <boolean:expand>true</boolean:expand>
        <boolean:detailedFormulaDisplayRepresentation>false</boolean:detailedFormulaDisplayRepresentation>
        <timelineFormat>area</timelineFormat>
        <timelineGraphColor>106,106,106</timelineGraphColor>
      </displayAttributes>
      <instanceBandTable>sched_and_counter_metrics</instanceBandTable>
    </countQuery>
    <infoQuery id="ContextSwitchReason" displayName="%ContextSwitchReason">
      <dbPath>sched_data::dd_context_switch.reason</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="QuantumSync" displayName="%QuantumSync">
      <helpKeyword>configs.quantumsync_quantumsyncdescription</helpKeyword>
      <valueType>double</valueType>
      <boolean:valueSummable>true</boolean:valueSummable>
      <displayAttributes>
        <selfFormat>number</selfFormat>
        <totalFormat>number</totalFormat>
        <boolean:canBeDoi>false</boolean:canBeDoi>
      </displayAttributes>
      <xsl:if test="not(exsl:ctx('hideContextSwitchesType',0))">
        <valueEval><![CDATA[1000 * (query("/SchedTime/ContextSwitchReason[%Yield]")) / query("/ContextSwitchCount/ContextSwitchReason[%Yield]") ]]></valueEval>
      </xsl:if>
      <description>%QuantumSyncDescription</description>
      <issueEval><![CDATA[ (( query("/QuantumSync") < 70) * ((query("/PMUFunction") == "NtDelayExecution") + (query("/PMUFunction") == "NtYieldExecution"))) + ( (query("/QuantumSync") < 1) * (query("/ContextSwitchCount/ContextSwitchReason[%Yield]") > 100) ) ]]></issueEval>
      <issueText>%QuantumSyncIssueText</issueText>
    </derivedQuery>
    <derivedQuery id="QuantumWaitTime" displayName="%QuantumWaitTime">
      <description>%QuantumWaitTimeDescription</description>
      <valueType>time</valueType>
      <xsl:if test="not(exsl:ctx('hideContextSwitchesType',0))">
        <valueEval><![CDATA[ query("/SchedTime/ContextSwitchReason[%Yield]")]]></valueEval>
      </xsl:if>
      <displayAttributes>
        <timelineFormat>area</timelineFormat>
        <timelineGraphColor>98,79,19</timelineGraphColor>
        <timeScalems>1000</timeScalems>
        <minimumResolutionms>0</minimumResolutionms>
      </displayAttributes>
    </derivedQuery>
    <derivedQuery id="QuantumInactiveTime" displayName="%QuantumInactiveTime">
      <helpKeyword>configs.quantuminactivetime_quantuminactivetimedescription</helpKeyword>
      <description>%QuantumInactiveTimeDescription</description>
      <valueType>time</valueType>
      <xsl:if test="not(exsl:ctx('hideContextSwitchesType',0))">
        <valueEval><![CDATA[ query("/SchedTime/ContextSwitchReason[%Preempted]") ]]></valueEval>
      </xsl:if>
      <displayAttributes>
        <timelineFormat>area</timelineFormat>
        <timelineGraphColor>98,79,19</timelineGraphColor>
        <timeScalems>1000</timeScalems>
        <minimumResolutionms>0</minimumResolutionms>
      </displayAttributes>
    </derivedQuery>
    <derivedQuery id="QuantumIOWaitTime" displayName="%QuantumIOWaitTime">
      <description>%QuantumIOWaitTimeDescription</description>
      <valueType>time</valueType>
      <xsl:if test="not(exsl:ctx('hideContextSwitchesType',0))">
        <valueEval><![CDATA[ query("/SchedTime/ContextSwitchReason[%Iowait]") ]]></valueEval>
      </xsl:if>
      <displayAttributes>
        <timelineFormat>area</timelineFormat>
        <timelineGraphColor>98,79,19</timelineGraphColor>
        <timeScalems>1000</timeScalems>
        <minimumResolutionms>0</minimumResolutionms>
      </displayAttributes>
    </derivedQuery>
    <derivedQuery id="InactiveWaitTimeWithPoorCPUUtilization" displayName="%WaitAndInactiveTimeWithPoorCPUUtilization">
      <description>%InactiveWaitTimeDescription</description>
      <valueEval><![CDATA[ query("/InactiveWaitTime/CPUUsageUtilization[%Poor]") + query("/InactiveWaitTime/CPUUsageUtilization[%Idle]") ]]></valueEval>
      <valueType>time</valueType>
    </derivedQuery>
    <derivedQuery id="InactiveWaitTimeWithPoorCPUUtilizationPercents" displayName="%WaitAndInactiveTimeWithPoorCPUUtilizationPercents">
      <valueEval><![CDATA[ query("/InactiveWaitTimeWithPoorCPUUtilization") / query("/InactiveWaitTime") ]]></valueEval>
      <valueType>ratio</valueType>
    </derivedQuery>
    <derivedQuery id="InactiveWaitTimeWithPoorCPUUtilizationString" displayName="%WaitAndInactiveTimeWithPoorCPUUtilization">
      <queryInherit>/InactiveWaitTimeWithPoorCPUUtilization</queryInherit>
      <valueEval><![CDATA[ t#query("/InactiveWaitTimeWithPoorCPUUtilization")   + " (" + %#query("/InactiveWaitTimeWithPoorCPUUtilizationPercents") + " from Inactive Wait Time)"]]></valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <derivedQuery id="InactiveWaitTimeWithPoorCPUUtilizationGrid" displayName="%WaitAndInactiveTimeWithPoorCPUUtilizationGrid">
      <queryInherit>/InactiveWaitTimeWithPoorCPUUtilization</queryInherit>
    </derivedQuery>
    <derivedQuery id="InactiveSyncWaitTimeWithPoorCPUUtilization" displayName="%InactiveSyncWaitTime">
      <queryInherit>/InactiveSyncWaitTime</queryInherit>
      <valueEval><![CDATA[ query("/InactiveSyncWaitTime/CPUUsageUtilization[%Poor]") + query("/InactiveSyncWaitTime/CPUUsageUtilization[%Idle]") ]]></valueEval>
      <issueEval><![CDATA[ ( query("/QuantumSync") < 1 ) && ( query("/InactiveSyncWaitTimeWithPoorCPUUtilization") > queryAll("/PMUTime") * .05 ) ]]></issueEval>
    </derivedQuery>
    <derivedQuery id="InactiveSyncWaitTime" displayName="%InactiveSyncWaitTime">
      <queryInherit>/QuantumWaitTime</queryInherit>
      <description>%InactiveSyncWaitTimeDescription</description>
      <issueEval><![CDATA[ ( query("/QuantumSync") < 1 ) && ( query("/InactiveSyncWaitTime") > queryAll("/PMUTime") * .05 ) ]]></issueEval>
      <issueText>%InactiveSyncWaitTimeIssueText</issueText>
    </derivedQuery>
    <derivedQuery id="PreemptionWaitTime" displayName="%PreemptionWaitTime">
      <queryInherit>/QuantumInactiveTime</queryInherit>
      <description>%PreemptionWaitTimeDescription</description>
      <issueEval><![CDATA[ ( query("/PreemptionWaitTime") > .05 * queryAll("/PMUTime") ) ]]></issueEval>
      <issueText>%PreemptionWaitTimeIssueText</issueText>
    </derivedQuery>
    <derivedQuery id="PreemptionWaitTimeWithPoorCPUUtilization" displayName="%PreemptionWaitTime">
      <queryInherit>/PreemptionWaitTime</queryInherit>
      <valueEval><![CDATA[ query("/PreemptionWaitTime/CPUUsageUtilization[%Poor]") + query("/PreemptionWaitTime/CPUUsageUtilization[%Idle]") ]]></valueEval>
      <issueEval><![CDATA[ ( query("/PreemptionWaitTimeWithPoorCPUUtilization") > .05 * queryAll("/PMUTime") ) ]]></issueEval>
      <issueText>%PreemptionWaitTimeIssueText</issueText>
    </derivedQuery>
    <derivedQuery id="QuantumWaitAndInactiveTimeExpanded" displayName="%QuantumWaitAndInactiveTime">
      <xsl:choose>
        <xsl:when test="exsl:ctx('hideContextSwitchesType',0)">
          <queryInherit>/InactiveWaitTime</queryInherit>
        </xsl:when>
        <xsl:otherwise>
          <queryInherit>/InactiveWaitTime</queryInherit>
          <expand>
            <vectorQuery id="QuantumWaitAndInactiveTimeExpansion">
              <queryRef>/QuantumIOWaitTime</queryRef>
              <queryRef>/QuantumWaitTime</queryRef>
              <queryRef>/QuantumInactiveTime</queryRef>
            </vectorQuery>
          </expand>
        </xsl:otherwise>
      </xsl:choose>
      <displayAttributes>
        <boolean:canBeDoi>true</boolean:canBeDoi>
      </displayAttributes>
    </derivedQuery>
    <instanceCountQuery id="ContextSwitchInstanceCount" displayName="%ContextSwitchCount">
      <instanceDbTable>sched_data::dd_context_switch</instanceDbTable>
      <valueType>count</valueType>
      <displayAttributes>
        <selfFormat>count</selfFormat>
        <totalFormat>countAndBar</totalFormat>
      </displayAttributes>
      <instanceBandTable>sched_and_counter_metrics</instanceBandTable>
    </instanceCountQuery>
    <derivedQuery id="InactiveWaitCount" displayName="%InactiveWaitCount">
      <description>%InactiveWaitCountDescription</description>
      <valueEval><![CDATA[ query("/ContextSwitchCount") ]]></valueEval>
      <valueType>count</valueType>
    </derivedQuery>
    <derivedQuery id="InactiveWaitCountWithPoorCPUUtilization" displayName="%InactiveWaitCount">
      <description>%InactiveWaitCountDescription</description>
      <valueEval><![CDATA[ query("/ContextSwitchCount/CPUUsageUtilization[%Poor]") + query("/ContextSwitchCount/CPUUsageUtilization[%Idle]") ]]></valueEval>
      <valueType>count</valueType>
    </derivedQuery>
    <derivedQuery id="InactiveSyncWaitCount" displayName="%InactiveSyncWaitCount">
      <description>%InactiveSyncWaitCountDescription</description>
      <valueType>count</valueType>
      <valueEval><![CDATA[ query("/ContextSwitchCount/ContextSwitchReason[%Yield]")]]></valueEval>
    </derivedQuery>
    <derivedQuery id="PreemptionWaitCount" displayName="%PreemptionWaitCount">
      <description>%PreemptionWaitCountDescription</description>
      <valueType>count</valueType>
      <valueEval><![CDATA[ query("/ContextSwitchCount/ContextSwitchReason[%Preempted]") ]]></valueEval>
    </derivedQuery>
    <derivedQuery id="InactiveSyncWaitCountWithPoorCPUUtilization">
      <queryInherit>/InactiveSyncWaitCount</queryInherit>
      <valueEval><![CDATA[ query("/InactiveSyncWaitCount/CPUUsageUtilization[%Poor]") + query("/InactiveSyncWaitCount/CPUUsageUtilization[%Idle]") ]]></valueEval>
      <valueType>count</valueType>
    </derivedQuery>
    <derivedQuery id="PreemptionWaitCountWithPoorCPUUtilization">
      <queryInherit>/PreemptionWaitCount</queryInherit>
      <valueEval><![CDATA[ query("/PreemptionWaitCount/CPUUsageUtilization[%Poor]") + query("/PreemptionWaitCount/CPUUsageUtilization[%Idle]") ]]></valueEval>
      <valueType>count</valueType>
    </derivedQuery>
    <countQuery id="ContextSwitchCountByReason" displayName="%ContextSwitchCount">
      <xsl:choose>
        <xsl:when test="exsl:ctx('hideContextSwitchesType',0)">
            <queryInherit>/ContextSwitchCount</queryInherit>
            <displayAttributes>
              <boolean:detailedFormulaDisplayRepresentation>false</boolean:detailedFormulaDisplayRepresentation>
              <boolean:canBeDoi>true</boolean:canBeDoi>
            </displayAttributes>
        </xsl:when>
        <xsl:otherwise>
          <queryInherit>/ContextSwitchCount/ContextSwitchReason</queryInherit>
          <displayAttributes>
            <boolean:expand>true</boolean:expand>
            <boolean:detailedFormulaDisplayRepresentation>false</boolean:detailedFormulaDisplayRepresentation>
            <boolean:canBeDoi>true</boolean:canBeDoi>
          </displayAttributes>
        </xsl:otherwise>
      </xsl:choose>
    </countQuery>
    <infoQuery id="ContextSwitchThreadState" displayName="%ContextSwitchThreadState">
      <dbPath>sched_data::dd_context_switch.thread_state</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="ContextSwitches" displayName="%ContextSwitches">
      <dbPath>sched_data::dd_context_switch</dbPath>
      <displayAttributes>
        <timelineGraphColor>224,249,216</timelineGraphColor>
        <timelineDecimationColor>168,218,157</timelineDecimationColor>
      </displayAttributes>
    </infoQuery>
    <infoQuery id="ContextSwitchCpu" displayName="%ContextSwitchCpu">
      <dbPath>sched_data::dd_context_switch.cpu</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="ContextSwitchRunningCpu" displayName="%ContextSwitchCpu">
      <dbPath>running_sched_data::dd_context_switch.cpu</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="ContextSwitchPackage" displayName="%Package">
      <dbPath>sched_data::dd_context_switch.cpu.core.package</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <infoQuery id="ContextSwitchRunningPackage" displayName="%Package">
      <dbPath>running_sched_data::dd_context_switch.cpu.core.package</dbPath>
      <displayDbPathSuffix>name</displayDbPathSuffix>
    </infoQuery>
    <derivedQuery id="ContextSwitchParentModule" displayName="%ContextSwitchParentModule">
      <valueEval><![CDATA[ query("/ContextSwitchParentFunctionModule") ? query("/ContextSwitchParentFunctionModule") : query("/ContextSwitchFunctionModule") ]]></valueEval>
      <valueType>string</valueType>
    </derivedQuery>
    <vectorQuery id="CSGenericPackage" displayName="%Package">
      <queryRef>/ContextSwitchPackage</queryRef>
      <queryRef>/ContextSwitchRunningPackage</queryRef>
    </vectorQuery>
    <vectorQuery id="CSGenericCpu" displayName="%ContextSwitchCpu">
      <queryRef>/ContextSwitchCpu</queryRef>
      <queryRef>/ContextSwitchRunningCpu</queryRef>
    </vectorQuery>
    <timeQuery id="CPUUsageByCS" displayName="%CPUTime">
      <instanceDbTable>running_sched_data::dd_context_switch</instanceDbTable>
      <description>%CPUTimeDescription</description>
      <displayAttributes>
        <sortType>descending</sortType>
        <selfFormat>time</selfFormat>
        <totalFormat>timeAndBar</totalFormat>
        <timelineFormat>area</timelineFormat>
        <timelineGraphColor>98,79,19</timelineGraphColor>
      </displayAttributes>
      <instanceBandTable>sched_and_counter_metrics</instanceBandTable>
    </timeQuery>
  </queryLibrary>
</bag>
